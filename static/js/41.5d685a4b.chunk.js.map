{"version":3,"sources":["api/browse.js","services/browse.js","components/TreeContainer/index.jsx","pages/Browse/index.jsx","api/folders.js","services/folders.js"],"names":["getBrowseDataApi","folderId","page","limit","recursive","url","endpoints","browse","get","sendRequest","method","headers","Authorization","getToken","queryParams","propTypes","PropTypes","number","bool","getBrowseData","browseData","then","res","pages","getLocalStorage","treeDataFormat","id","name","string","description","children","arrayOf","shape","TreeContainer","data","handleClick","folderCount","Expandable","renderers","useState","state","setState","className","style","height","nodes","onChange","node","rest","type","onClick","e","Browse","setBrowseData","browseDataList","setBrowseDataList","pagesOptions","setPagesOptions","folderList","setFolderList","setFolderCount","initialMessage","message","setMessage","showMessage","setShowMessage","query","setQuery","useEffect","text","messages","loading","arr","i","push","value","catch","error","handleError","getAllFolders","folders","map","folder","expanded","favorite","deletable","length","arrayToTree","parentProperty","customID","handleChange","target","Title","title","setShow","preventDefault","colSpan","options","entriesOptions","property","placeholder","event","statusOptions","assignOptions","filter","post","uploadname","toLowerCase","includes","uploadId","scheduleReport","setTimeout","downloadReport","response","filename","getFileNameFromContentDispostionHeader","blob","aTag","document","createElement","href","window","URL","createObjectURL","download","body","appendChild","click","revokeObjectURL","removeChild","handleActionChange","actionsOptions","defaultValue","valueProperty","uploaddate","split","moveCopyFolderApi","parent","action","move","groupName","getAll","getAllFoldersApi","getSingleFolder","getSingle","getSingleFolderApi","deleteFolder","delete","deleteFolderApi","createFolder","parentFolder","folderName","folderDescription","create","createFolderApi","editFolder","edit","editFolderApi","moveFolder","copyFolder"],"mappings":"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","file":"static/js/41.5d685a4b.chunk.js","sourcesContent":["/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport PropTypes from \"prop-types\";\nimport endpoints from \"constants/endpoints\";\n\n// Getting Authorization Token\nimport { getToken } from \"shared/authHelper\";\n\n// Function for calling the fetch function for the APIs\nimport sendRequest from \"./sendRequest\";\n\n// Fetching all the Uploads with the give parameters of page, limit\nconst getBrowseDataApi = ({ folderId, page, limit, recursive }) => {\n  const url = endpoints.browse.get();\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n      page,\n      limit,\n    },\n    queryParams: {\n      folderId,\n      recursive,\n    },\n  });\n};\n\ngetBrowseDataApi.propTypes = {\n  page: PropTypes.number,\n  limit: PropTypes.number,\n  folderId: PropTypes.number,\n  recursive: PropTypes.bool,\n};\n\nexport default getBrowseDataApi;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport getBrowseDataApi from \"api/browse\";\nimport { getLocalStorage } from \"shared/storageHelper\";\n\n// Fetching all the Uploads\nconst getBrowseData = (browseData) => {\n  return getBrowseDataApi(browseData).then((res) => {\n    return {\n      res,\n      pages: getLocalStorage(\"pages\"),\n    };\n  });\n};\n\nexport default getBrowseData;\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tree, { renderers } from \"react-virtualized-tree\";\nimport \"./index.css\";\n\nconst TreeContainer = ({ data, handleClick, folderCount }) => {\n  const { Expandable } = renderers;\n  const [state, setState] = useState(data);\n\n  const handleChange = (nodes) => {\n    setState(nodes);\n  };\n\n  return (\n    <div>\n      <div\n        className=\"tree-list\"\n        style={{\n          height: state ? `${folderCount * 40}px` : \"0\",\n        }}\n      >\n        <Tree nodes={state} onChange={handleChange}>\n          {({ style, node, ...rest }) => (\n            <div style={style}>\n              <Expandable node={node} {...rest}>\n                <button\n                  className=\"folder-tree-list text-primary-color\"\n                  type=\"button\"\n                  onClick={(e) => handleClick(e, node.id)}\n                >\n                  {node.name}\n                </button>\n              </Expandable>\n            </div>\n          )}\n        </Tree>\n      </div>\n    </div>\n  );\n};\n\nconst treeDataFormat = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  description: PropTypes.string,\n};\ntreeDataFormat.children = PropTypes.arrayOf(PropTypes.shape(treeDataFormat));\nTreeContainer.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape(treeDataFormat)),\n  handleClick: PropTypes.func.isRequired,\n  folderCount: PropTypes.number,\n};\n\nexport default TreeContainer;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com),\n Copyright (C) 2022 Soham Banerjee (sohambanerjee4abc@hotmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React, { useState, useEffect } from \"react\";\nimport arrayToTree from \"array-to-tree\";\nimport messages from \"constants/messages\";\n\n// Title\nimport Title from \"components/Title\";\n\n// Widgets\nimport { InputContainer, Alert } from \"components/Widgets\";\n\n// Tree View of folders\nimport TreeContainer from \"components/TreeContainer\";\n\n// Required functions for calling APIs\nimport getBrowseData from \"services/browse\";\nimport { getAllFolders } from \"services/folders\";\nimport { scheduleReport, downloadReport } from \"services/jobs\";\nimport {\n  getFileNameFromContentDispostionHeader,\n  handleError,\n} from \"shared/helper\";\n\nimport {\n  statusOptions,\n  entriesOptions,\n  assignOptions,\n  actionsOptions,\n  initialMessage,\n} from \"../../constants/constants\";\n\nconst Browse = () => {\n  const initialState = {\n    folderId: 1,\n    page: 1,\n    limit: 10,\n    recursive: false,\n  };\n\n  // Data required for getting the browse data list\n  const [browseData, setBrowseData] = useState(initialState);\n\n  // Setting the browse data to the table\n  const [browseDataList, setBrowseDataList] = useState();\n\n  // Setting the count of pages\n  const [pagesOptions, setPagesOptions] = useState();\n\n  // Setting the list for all the folders names\n  const [folderList, setFolderList] = useState();\n  const [folderCount, setFolderCount] = useState(0);\n\n  // State Variables for handling Error Boundaries\n  // const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(initialMessage);\n  const [showMessage, setShowMessage] = useState(false);\n  // qurey used for searching in the current page\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    setMessage({\n      type: \"success\",\n      text: messages.loading,\n    });\n    setShowMessage(true);\n    getBrowseData(browseData)\n      .then((res) => {\n        setBrowseDataList(res.res);\n        const arr = [];\n        for (let i = 0; i < res.pages; i++) {\n          arr.push({\n            id: i + 1,\n            value: i + 1,\n          });\n        }\n        setPagesOptions(arr);\n        setShowMessage(false);\n      })\n      .catch((error) => {\n        handleError(error, setMessage);\n        setShowMessage(true);\n      });\n  }, [browseData]);\n\n  useEffect(() => {\n    getAllFolders()\n      .then((res) => {\n        const folders = res.map((folder) => {\n          return {\n            ...folder,\n            state: {\n              expanded: true,\n              favorite: false,\n              deletable: false,\n            },\n          };\n        });\n        // setting the folders and subfolders count before converting the array to tree\n        setFolderCount(folders.length);\n        setFolderList(\n          arrayToTree(folders, {\n            parentProperty: \"parent\",\n            customID: \"id\",\n          })\n        );\n      })\n      .catch((error) => {\n        handleError(error, setMessage);\n        setShowMessage(true);\n      });\n  }, []);\n\n  const handleChange = (e) => {\n    if (e.target.name === \"limit\") {\n      setBrowseData({\n        ...browseData,\n        [e.target.name]: e.target.value,\n        page: 1,\n      });\n    } else {\n      setBrowseData({ ...browseData, [e.target.name]: e.target.value });\n    }\n  };\n\n  const handleActionChange = (e, uploadId) => {\n    scheduleReport(uploadId, e.target.value)\n      .then((res) => {\n        return res?.message;\n      })\n      .then((url) => {\n        setTimeout(() => {\n          downloadReport(url)\n            .then((response) => {\n              return response;\n            })\n            .then((response) => {\n              const filename = getFileNameFromContentDispostionHeader(\n                response.headers.get(\"content-disposition\")\n              );\n              response\n                .blob()\n                .then((blob) => {\n                  const aTag = document.createElement(\"a\");\n                  aTag.href = window.URL.createObjectURL(blob);\n                  aTag.download = filename;\n                  document.body.appendChild(aTag); // Required for this to work in FireFox\n                  aTag.click();\n                  setTimeout(() => {\n                    window.URL.revokeObjectURL(url);\n                    document.body.removeChild(aTag);\n                  }, 150);\n                })\n                .catch((error) => {\n                  handleError(error, setMessage);\n                  setShowMessage(true);\n                });\n            })\n            .catch((error) => {\n              handleError(error, setMessage);\n              setShowMessage(true);\n            });\n        }, 1200);\n      })\n      .catch((error) => {\n        handleError(error, setMessage);\n        setShowMessage(true);\n      });\n  };\n\n  const handleClick = (e, id) => {\n    e.preventDefault();\n    setBrowseData({ ...browseData, folderId: id });\n  };\n\n  return (\n    <>\n      <Title title=\"Browse\" />\n      <div className=\"main-container my-3\">\n        {showMessage && (\n          <Alert\n            type={message.type}\n            setShow={setShowMessage}\n            message={message.text}\n          />\n        )}\n        <div className=\"row\">\n          <div className=\"col-md-3 col-lg-2\">\n            <h2 className=\"font-size-sub-heading\">Folder Navigation</h2>\n            {folderList && (\n              <TreeContainer\n                folderCount={folderCount}\n                data={folderList}\n                handleClick={handleClick}\n              />\n            )}\n          </div>\n          <div className=\"col-md-9 col-lg-10\">\n            <table className=\"table table-striped text-primary-color font-size-medium table-responsive-sm table-bordered\">\n              <thead>\n                <tr>\n                  <th colSpan=\"6\" className=\"font-size-sub-heading text-center\">\n                    Uploads in Software Repository\n                  </th>\n                </tr>\n                <tr className=\"font-demi\">\n                  <td colSpan=\"6\" className=\"p-2 m-2\">\n                    <span className=\"mt-1\">Show entries: </span>\n                    <InputContainer\n                      name=\"limit\"\n                      type=\"select\"\n                      onChange={(e) => handleChange(e)}\n                      options={entriesOptions}\n                      property=\"entry\"\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <th>\n                    <input\n                      type=\"search\"\n                      className=\"form-control\"\n                      placeholder=\"Filter upload\"\n                      onChange={(event) => setQuery(event.target.value)}\n                    />\n                  </th>\n                  <th>\n                    <InputContainer\n                      name=\"status\"\n                      type=\"select\"\n                      onChange={(e) => handleChange(e)}\n                      options={statusOptions}\n                      property=\"name\"\n                    />\n                  </th>\n                  <th />\n                  <th />\n                  <th>\n                    <InputContainer\n                      name=\"status\"\n                      type=\"select\"\n                      onChange={(e) => handleChange(e)}\n                      options={assignOptions}\n                      property=\"name\"\n                    />\n                  </th>\n                </tr>\n                <tr className=\"font-bold text-center\">\n                  <th>Upload Name and Description</th>\n                  <th>Status</th>\n                  <th>Comment</th>\n                  <th>Main Licenses</th>\n                  <th>Assigned to</th>\n                  <th>Upload Date</th>\n                </tr>\n              </thead>\n              <tbody>\n                {browseDataList\n                  ?.filter((post) => {\n                    if (query === \"\") {\n                      return post;\n                    }\n                    if (\n                      post?.uploadname\n                        .toLowerCase()\n                        .includes(query.toLowerCase())\n                    )\n                      return post;\n                    return null;\n                  })\n                  ?.map((data) => (\n                    <tr key={data?.id} className=\"text-center\">\n                      <td>\n                        <div className=\"font-demi\">{data?.uploadname}</div>\n                        <div className=\"font-size-small\">\n                          {data?.description}\n                        </div>\n                        <InputContainer\n                          name=\"action\"\n                          type=\"select\"\n                          onChange={(e) => handleActionChange(e, data?.id)}\n                          options={actionsOptions}\n                          property=\"name\"\n                          defaultValue=\"0\"\n                          valueProperty=\"reportFormat\"\n                        />\n                      </td>\n                      <td>\n                        <InputContainer\n                          name=\"status\"\n                          type=\"select\"\n                          onChange={(e) => handleChange(e)}\n                          options={statusOptions}\n                          property=\"name\"\n                        />\n                      </td>\n                      <td>-</td>\n                      <td>-</td>\n                      <td>\n                        <InputContainer\n                          name=\"status\"\n                          type=\"select\"\n                          onChange={(e) => handleChange(e)}\n                          options={assignOptions}\n                          property=\"name\"\n                        />\n                      </td>\n                      <td>{data?.uploaddate.split(\".\")[0]}</td>\n                    </tr>\n                  ))}\n                <tr>\n                  <td colSpan=\"6\">\n                    Page:\n                    {pagesOptions && (\n                      <InputContainer\n                        name=\"page\"\n                        type=\"select\"\n                        onChange={(e) => handleChange(e)}\n                        options={pagesOptions}\n                        property=\"value\"\n                        className=\"mt-n4\"\n                      />\n                    )}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Browse;\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport endpoints from \"constants/endpoints\";\n\n// Getting Authorization Token\nimport { getToken } from \"shared/authHelper\";\n\n// Function for calling the fetch function for the APIs\nimport sendRequest from \"./sendRequest\";\n\n// Fetching all the folders\nexport const getAllFoldersApi = (groupName) => {\n  const url = endpoints.folders.getAll();\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n    groupName,\n  });\n};\n\n// Fetching a single folder by its id\nexport const getSingleFolderApi = (id) => {\n  const url = endpoints.folders.getSingle(id);\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n  });\n};\n\n// Deleting a folder by its id\nexport const deleteFolderApi = (id) => {\n  const url = endpoints.folders.delete(id);\n  return sendRequest({\n    url,\n    method: \"DELETE\",\n    headers: {\n      Authorization: getToken(),\n    },\n  });\n};\n\n// Creating a folder\nexport const createFolderApi = (\n  parentFolder,\n  folderName,\n  folderDescription\n) => {\n  const url = endpoints.folders.create();\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      Authorization: getToken(),\n      parentFolder,\n      folderName,\n      folderDescription,\n    },\n  });\n};\n\n// Editing a folder properties\nexport const editFolderApi = (name, description, id) => {\n  const url = endpoints.folders.edit(id);\n  return sendRequest({\n    url,\n    method: \"PATCH\",\n    headers: {\n      Authorization: getToken(),\n      name,\n      description,\n    },\n  });\n};\n\n// Moving and copying a folder into another folder\nexport const moveCopyFolderApi = (parent, id, action) => {\n  const url = endpoints.folders.move(id);\n  return sendRequest({\n    url,\n    method: \"PUT\",\n    headers: {\n      Authorization: getToken(),\n      parent,\n      action,\n    },\n  });\n};\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport {\n  getAllFoldersApi,\n  getSingleFolderApi,\n  createFolderApi,\n  deleteFolderApi,\n  editFolderApi,\n  moveCopyFolderApi,\n} from \"api/folders\";\n\n// Fetching all the folders\nexport const getAllFolders = (groupName) => {\n  return getAllFoldersApi(groupName).then((res) => {\n    return res;\n  });\n};\n\n// Fetching a single folder by its id\nexport const getSingleFolder = (id) => {\n  return getSingleFolderApi(id).then((res) => {\n    return res;\n  });\n};\n\n// Deleting a folder by its id\nexport const deleteFolder = ({ id }) => {\n  return deleteFolderApi(id).then((res) => {\n    return res;\n  });\n};\n\n// Creating a folder\nexport const createFolder = ({\n  parentFolder,\n  folderName,\n  folderDescription,\n}) => {\n  return createFolderApi(parentFolder, folderName, folderDescription).then(\n    (res) => {\n      return res;\n    }\n  );\n};\n\n// Editing a folder properties\nexport const editFolder = ({ name, description, id }) => {\n  return editFolderApi(name, description, id).then((res) => {\n    return res;\n  });\n};\n\n// Moving a folder into another folder\nexport const moveFolder = ({ parent, id }) => {\n  return moveCopyFolderApi(parent, id, \"move\").then((res) => {\n    return res;\n  });\n};\n\n// Copying a folder into another folder\nexport const copyFolder = ({ parent, id }) => {\n  return moveCopyFolderApi(parent, id, \"copy\").then((res) => {\n    return res;\n  });\n};\n"],"sourceRoot":""}