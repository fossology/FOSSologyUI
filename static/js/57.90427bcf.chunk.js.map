{"version":3,"sources":["pages/Upload/Server/index.jsx","constants/constants.js","services/groups.js","api/groups.js","components/Upload/CommonFields/IgnoreScm/index.jsx","components/Upload/CommonFields/AccessLevel/index.jsx","components/Upload/CommonFields/OptionalAnalysis/index.jsx","components/Upload/CommonFields/LicenseDecider/index.jsx","components/Upload/CommonFields/UploadReuse/index.jsx","components/Upload/CommonFields/index.jsx"],"names":["UploadFromServer","useState","initialStateUploadFromServer","uploadServerData","setUploadServerData","initialFolderList","folderList","setFolderList","initialScanFileData","scanFileData","setScanFileData","message","setMessage","showMessage","setShowMessage","handleChange","e","target","type","name","checked","files","value","useEffect","getAllFolders","then","res","catch","error","window","scrollTo","top","text","title","className","setShow","id","onChange","options","property","htmlFor","rows","accessLevel","ignoreScm","analysis","decider","reuse","handleScanChange","Object","keys","find","parseInt","onClick","preventDefault","statusOptions","assignOptions","actionsOptions","reportFormat","disabled","initialMessage","initialState","searchType","uploadId","filename","tag","filesizemin","filesizemax","license","copyright","page","limit","initialMessageSearch","initialStateFile","folderId","uploadDescription","fileInput","initialScanFileDataFile","defaultAgentsList","nomosMonk","bulkReused","newScanner","ojoDecider","reuseUpload","reuseGroup","getLocalStorage","default_group","reuseMain","reuseEnhanced","reuseReport","reuseCopyright","initialFolderListFile","description","parent","initialStateImportReport","folder","editUpload","reportUpload","newLicense","licenseInfoInFile","licenseConcluded","licenseDecision","existingDecisions","importDiscussed","uploadType","groupName","initialStateUrl","initialUrlData","url","initialStateVcs","initialVcsData","vcsType","vcsUrl","vcsBranch","vcsName","vcsUsername","vcsPassword","typeVcs","entriesOptions","entry","initialMantainanceFields","a","A","F","g","E","L","N","R","t","T","D","Z","I","v","o","l","logsDate","goldDate","accessLevels","userStatus","initialAddUserData","user_pass","rootFolderId","emailNotification","email","defaultVisibility","defaultBucketpool","agents","mime","monk","ojo","bucket","copyright_email_author","ecc","keyword","nomos","package","reso","heritage","bucketPool","getAllGroups","fetchAllGroups","endpoints","admin","groups","getAll","sendRequest","method","headers","Authorization","getToken","addGroupName","getAllGroupsApi","setLocalStorage","createGroup","create","createGroupApi","deleteGroup","delete","deleteGroupApi","fetchAllDeletableGroups","getAllDeletable","getAllDeletableGroupsApi","IgnoreScm","AccessLevel","OptionalAnalysis","Input","copyrightEmailAuthor","LicenseDecider","UploadReuse","groupList","uploadList","uploadName","reuseFolder","reuseData","setReuseData","prevData","getUploadsFolderId","valueProperty","noDataMessage","messages","noGroup","noFolder","noUploads","CommonFields"],"mappings":"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","file":"static/js/57.90427bcf.chunk.js","sourcesContent":["/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React, { useState, useEffect } from \"react\";\n\n// Widgets\nimport { Alert, Button, InputContainer } from \"components/Widgets\";\n\n// Common Fields for all the Uploads\nimport CommonFields from \"components/Upload/CommonFields\";\n\n// Required functions for calling APIs\nimport { getAllFolders } from \"services/folders\";\n\n// Title\nimport Title from \"components/Title\";\n\n// constants\nimport {\n  initialStateUploadFromServer,\n  initialScanFileData,\n  initialFolderList,\n} from \"../../../constants/constants\";\n\nconst UploadFromServer = () => {\n  // Data required for creating the upload\n  const [uploadServerData, setUploadServerData] = useState(\n    initialStateUploadFromServer\n  );\n\n  // Setting the list for all the folders names\n  const [folderList, setFolderList] = useState(initialFolderList);\n\n  // Setting the data for scheduling analysis of an uploads\n  const [scanFileData, setScanFileData] = useState(initialScanFileData);\n\n  // State Variables for handling Error Boundaries\n  const [message, setMessage] = useState();\n  const [showMessage, setShowMessage] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n  const handleChange = (e) => {\n    if (e.target.type === \"checkbox\") {\n      setUploadServerData({\n        ...uploadServerData,\n        [e.target.name]: e.target.checked,\n      });\n    } else if (e.target.type === \"file\") {\n      setUploadServerData({\n        ...uploadServerData,\n        [e.target.name]: e.target.files[0],\n      });\n    } else {\n      setUploadServerData({\n        ...uploadServerData,\n        [e.target.name]: e.target.value,\n      });\n    }\n  };\n  const handleScanChange = (e) => {\n    const { name } = e.target;\n    if (\n      Object.keys(scanFileData.analysis).find((analysis) => analysis === name)\n    ) {\n      setScanFileData({\n        ...scanFileData,\n        analysis: {\n          ...scanFileData.analysis,\n          [e.target.name]: e.target.checked,\n        },\n      });\n    } else if (\n      Object.keys(scanFileData.decider).find((decider) => decider === name)\n    ) {\n      setScanFileData({\n        ...scanFileData,\n        decider: {\n          ...scanFileData.decider,\n          [e.target.name]: e.target.checked,\n        },\n      });\n    } else {\n      setScanFileData({\n        ...scanFileData,\n        reuse: {\n          ...scanFileData.reuse,\n          [e.target.name]:\n            e.target.type === \"checkbox\"\n              ? e.target.checked\n              : parseInt(e.target.value, 10) || e.target.value,\n        },\n      });\n    }\n  };\n  useEffect(() => {\n    getAllFolders()\n      .then((res) => {\n        setFolderList(res);\n      })\n      .catch((error) => {\n        window.scrollTo({ top: 0 });\n        setMessage({\n          type: \"danger\",\n          text: error.message,\n        });\n        setShowMessage(true);\n      });\n  }, []);\n  return (\n    <>\n      <Title title=\"Upload from Server\" />\n      <div className=\"main-container my-3\">\n        {showMessage && (\n          <Alert\n            type={message.type}\n            message={message.text}\n            setShow={setShowMessage}\n          />\n        )}\n        <div className=\"row\">\n          <div className=\"col-lg-8 col-md-12 col-sm-12 col-12\">\n            <h1 className=\"font-size-main-heading\">Upload from Server</h1>\n            <br />\n            <p className=\"font-demi\">\n              To manage your own group permissions go into Admin &gt; Groups\n              &gt; Manage Group Users. To manage permissions for this one\n              upload, go to Admin &gt; Upload Permissions.\n            </p>\n            <p>This option permits uploading a files from the server.</p>\n            <form className=\"my-3\">\n              <InputContainer\n                type=\"select\"\n                name=\"\"\n                id=\"upload-server-folder-id\"\n                onChange={(e) => handleChange(e)}\n                options={folderList}\n                property=\"name\"\n                value=\"\"\n              >\n                Select the folder for storing the uploaded files:\n              </InputContainer>\n              <InputContainer\n                type=\"text\"\n                name=\"\"\n                id=\"upload-server-file-path\"\n                onChange={(e) => handleChange(e)}\n                value=\"\"\n              >\n                Enter the file path:\n              </InputContainer>\n              <div className=\"mt-n2 mb-3\">\n                NOTE: Contents under a directory will be recursively included.\n                '*' is supported to select multiple files (e.g. *.txt).\n              </div>\n              <InputContainer\n                type=\"text\"\n                name=\"\"\n                id=\"upload-server-viewable-name\"\n                onChange={(e) => handleChange(e)}\n                value=\"\"\n              >\n                (Optional) Enter a viewable name for this file or directory:\n              </InputContainer>\n              <div className=\"mt-n2\">\n                Note: If no name is provided, then the uploaded file (directory)\n                name will be used.\n              </div>\n              <div className=\"my-3\">\n                <label\n                  htmlFor=\"upload-server-description\"\n                  className=\"font-demi w-100\"\n                >\n                  (Optional) Enter a description of this file:\n                  <textarea\n                    name=\"description\"\n                    className=\"form-control font-regular mt-2\"\n                    value=\"\"\n                    id=\"upload-server-description\"\n                    rows=\"3\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                </label>\n              </div>\n              <CommonFields\n                accessLevel={uploadServerData.accessLevel}\n                ignoreScm={uploadServerData.ignoreScm}\n                analysis={scanFileData.analysis}\n                decider={scanFileData.decider}\n                reuse={scanFileData.reuse}\n                handleChange={handleChange}\n                handleScanChange={handleScanChange}\n              />\n              <Button type=\"submit\" onClick={handleSubmit} className=\"mt-4\">\n                Upload\n              </Button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UploadFromServer;\n","/*\n Copyright (C) 2022 Soham Banerjee(sohambanerjee4abc@hotmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\n// constants used in Browse component\nimport { defaultAgentsList, getLocalStorage } from \"shared/storageHelper\";\n\nexport const statusOptions = [\n  {\n    id: 0,\n    name: \"open\",\n  },\n  {\n    id: 1,\n    name: \"in progress\",\n  },\n  {\n    id: 2,\n    name: \"closed\",\n  },\n  {\n    id: 3,\n    name: \"rejected\",\n  },\n];\n\nexport const assignOptions = [\n  {\n    id: 0,\n    name: \"me\",\n  },\n  {\n    id: 1,\n    name: \"unassigned\",\n  },\n];\nexport const actionsOptions = [\n  {\n    id: 0,\n    name: \"-- select action --\",\n    reportFormat: \"0\",\n    disabled: true,\n  },\n  {\n    id: 1,\n    name: \"Export DEP5\",\n    reportFormat: \"dep5\",\n  },\n  {\n    id: 2,\n    name: \"Export ReadMe_OSS\",\n    reportFormat: \"readmeoss\",\n  },\n  {\n    id: 3,\n    name: \"Export SPDX RDF\",\n    reportFormat: \"spdx2\",\n  },\n  {\n    id: 4,\n    name: \"Export SPDX tag:value\",\n    reportFormat: \"spdx2tv\",\n  },\n  {\n    id: 5,\n    name: \"Export Unified Report\",\n    reportFormat: \"unifiedreport\",\n  },\n];\nexport const initialMessage = {\n  type: \"success\",\n  text: \"\",\n};\n\nexport const initialState = {\n  searchType: \"allfiles\",\n  uploadId: \"\",\n  filename: \"\",\n  tag: \"\",\n  filesizemin: \"\",\n  filesizemax: \"\",\n  license: \"\",\n  copyright: \"\",\n  page: 1,\n  limit: 10,\n};\n// constants used in the Search component\nexport const initialMessageSearch = {\n  type: \"danger\",\n  text: \"\",\n};\n\n// constants used in Upload/file component\nexport const initialStateFile = {\n  folderId: 1,\n  uploadDescription: \"\",\n  accessLevel: \"protected\",\n  ignoreScm: false,\n  fileInput: null,\n};\nexport const initialScanFileDataFile = {\n  analysis: defaultAgentsList(),\n  decider: {\n    nomosMonk: false,\n    bulkReused: false,\n    newScanner: false,\n    ojoDecider: false,\n  },\n  reuse: {\n    reuseUpload: 0,\n    reuseGroup: getLocalStorage(\"user\")?.default_group,\n    reuseMain: false,\n    reuseEnhanced: false,\n    reuseReport: false,\n    reuseCopyright: false,\n  },\n};\nexport const initialFolderListFile = [\n  {\n    id: 1,\n    name: \"Software Repository\",\n    description: \"Top Folder\",\n    parent: null,\n  },\n];\n// constants for upload/ImportReport\nexport const initialStateImportReport = {\n  folder: \"\",\n  editUpload: \"\",\n  reportUpload: \"\",\n  newLicense: \"licenseCanditate\",\n  licenseInfoInFile: true,\n  licenseConcluded: false,\n  licenseDecision: true,\n  existingDecisions: true,\n  importDiscussed: true,\n  copyright: false,\n};\n\n// constants for upload/UploadFromServer\nexport const initialStateUploadFromServer = {\n  folderId: 1,\n  uploadDescription: \"\",\n  accessLevel: \"protected\",\n  ignoreScm: false,\n  uploadType: \"server\",\n  groupName: \"\",\n};\n\n// constants for upload/url\nexport const initialStateUrl = {\n  folderId: 1,\n  uploadDescription: \"\",\n  accessLevel: \"protected\",\n  ignoreScm: false,\n  uploadType: \"url\",\n};\n\nexport const initialUrlData = {\n  url: \"\",\n  name: \"\",\n};\n\n// constants from upload/vcs\nexport const initialStateVcs = {\n  folderId: 1,\n  uploadDescription: \"\",\n  accessLevel: \"protected\",\n  ignoreScm: false,\n  uploadType: \"vcs\",\n};\n\nexport const initialVcsData = {\n  vcsType: \"git\",\n  vcsUrl: \"\",\n  vcsBranch: \"\",\n  vcsName: \"\",\n  vcsUsername: \"\",\n  vcsPassword: \"\",\n};\nexport const typeVcs = [\n  { id: \"git\", type: \"Git\" },\n  { id: \"svn\", type: \"SVN\" },\n];\n\n// common & reused\nexport const entriesOptions = [\n  {\n    id: 10,\n    entry: \"10\",\n  },\n  {\n    id: 25,\n    entry: \"25\",\n  },\n  {\n    id: 50,\n    entry: \"50\",\n  },\n  {\n    id: 100,\n    entry: \"100\",\n  },\n];\nexport const initialScanFileData = {\n  analysis: defaultAgentsList(),\n  decider: {\n    nomosMonk: false,\n    bulkReused: false,\n    newScanner: false,\n    ojoDecider: false,\n  },\n  reuse: {\n    reuseUpload: 0,\n    reuseGroup: getLocalStorage(\"user\")?.default_group,\n    reuseMain: false,\n    reuseEnhanced: false,\n    reuseReport: false,\n    reuseCopyright: false,\n  },\n};\nexport const initialFolderList = [\n  {\n    id: 1,\n    name: \"Software Repository\",\n    description: \"Top Folder\",\n    parent: null,\n  },\n];\n\nexport const initialMantainanceFields = {\n  a: false,\n  A: false,\n  F: false,\n  g: false,\n  E: false,\n  L: false,\n  N: false,\n  R: false,\n  t: false,\n  T: false,\n  D: false,\n  Z: false,\n  I: false,\n  v: false,\n  o: false,\n  l: false,\n  logsDate: \"\",\n  goldDate: \"\",\n};\n\nexport const accessLevels = [\n  {\n    id: 0,\n    name: \"None (very basic, no database access)\",\n    disabled: false,\n    value: \"none\",\n  },\n  {\n    id: 1,\n    name: \"Read-only (read, but no writes or downloads)\",\n    disabled: false,\n    value: \"read_only\",\n  },\n  {\n    id: 2,\n    name: \"Read-Write (read, download, or edit information)\",\n    disabled: false,\n    value: \"read_write\",\n  },\n  {\n    id: 3,\n    name: \"Clearing Administrator (read, download, edit information and edit decisions)\",\n    disabled: false,\n    value: \"clearing_admin\",\n  },\n  {\n    id: 4,\n    name: \"Full Administrator (all access including adding and deleting users)\",\n    disabled: false,\n    value: \"admin\",\n  },\n];\n\nexport const userStatus = [\n  {\n    id: 0,\n    name: \"Active\",\n    disabled: false,\n    value: \"active\",\n  },\n  {\n    id: 1,\n    name: \"Inactive\",\n    disabled: false,\n    value: \"inactive\",\n  },\n];\n\nexport const initialAddUserData = {\n  name: \"\",\n  user_pass: null,\n  description: \"\",\n  accessLevel: \"\",\n  rootFolderId: 0,\n  emailNotification: true,\n  email: \"\",\n  defaultVisibility: \"public\",\n  defaultBucketpool: 2,\n  agents: {\n    mime: false,\n    monk: false,\n    ojo: false,\n    bucket: false,\n    copyright_email_author: false,\n    ecc: false,\n    keyword: false,\n    nomos: false,\n    package: false,\n    reso: false,\n    heritage: false,\n  },\n};\n\nexport const bucketPool = [\n  {\n    id: 0,\n    name: \"GPL Demo bucket pool, v1\",\n    disabled: false,\n  },\n];\n\nexport const agents = {\n  bucket: \"Bucket Analysis\",\n  copyright_email_author: \"Copyright/Email/URL/Author Analysis\",\n  ecc: \"ECC Analysis, scanning for text fragments potentially relevant for export control\",\n  keyword: \"Keyword Analysis\",\n  mime: \"MIME-type Analysis (Determine mimetype of every file. Not needed for licenses or buckets)\",\n  monk: \"Monk License Analysis, scanning for licenses performing a text comparison\",\n  nomos:\n    \"Nomos License Analysis, scanning for licenses using regular expressions\",\n  ojo: \"Ojo License Analysis, scanning for licenses using SPDX-License-Identifier\",\n  package: \"Package Analysis (Parse package headers)\",\n  reso: \"REUSE.Software Analysis (forces *Ojo License Analysis*)\",\n  heritage: \"Software Heritage Analysis\",\n};\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n Copyright (C) 2022 Samuel Dushimimana (dushsam100@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport {\n  getAllGroupsApi,\n  createGroupApi,\n  deleteGroupApi,\n  getAllDeletableGroupsApi,\n} from \"api/groups\";\nimport { setLocalStorage, getLocalStorage } from \"shared/storageHelper\";\n\n// Fetching all the groups\nexport const getAllGroups = () => {\n  return getLocalStorage(\"groups\");\n};\n\nexport const fetchAllGroups = () => {\n  return getAllGroupsApi().then((res) => {\n    setLocalStorage(\"groups\", res);\n    return res;\n  });\n};\n\n// Creating a group\nexport const createGroup = (name) => {\n  return createGroupApi(name).then((res) => {\n    return res;\n  });\n};\n\n// Delete a group\nexport const deleteGroup = (id) => {\n  return deleteGroupApi(id).then((res) => {\n    return res;\n  });\n};\n\n// Fetching all deletable groups\nexport const fetchAllDeletableGroups = () => {\n  return getAllDeletableGroupsApi().then((res) => {\n    return res;\n  });\n};\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport endpoints from \"constants/endpoints\";\n\n// Getting Authorization Token\nimport { getToken } from \"shared/authHelper\";\n\n// Function for calling the fetch function for the APIs\nimport sendRequest from \"./sendRequest\";\n\n// Fetching all the groups\nexport const getAllGroupsApi = () => {\n  const url = endpoints.admin.groups.getAll();\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n    addGroupName: false,\n  });\n};\n\n// Fetching all deletable groups\nexport const getAllDeletableGroupsApi = () => {\n  const url = endpoints.admin.groups.getAllDeletable();\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n    addGroupName: false,\n  });\n};\n\n// Creating a group\nexport const createGroupApi = (name) => {\n  const url = endpoints.admin.groups.create();\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      Authorization: getToken(),\n      name,\n    },\n    addGroupName: false,\n  });\n};\n\n// Delete a group\nexport const deleteGroupApi = (id) => {\n  const url = endpoints.admin.groups.delete(id);\n  return sendRequest({\n    url,\n    method: \"DELETE\",\n    headers: {\n      Authorization: getToken(),\n    },\n    addGroupName: false,\n  });\n};\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\nfunction IgnoreScm({ ignoreScm, handleChange }) {\n  return (\n    <div id=\"upload-ignore-files\" className=\"mt-4\">\n      <InputContainer\n        type=\"checkbox\"\n        checked={ignoreScm}\n        name=\"ignoreScm\"\n        id=\"upload-ignore-scm\"\n        onChange={(e) => handleChange(e)}\n      >\n        Ignore SCM files (Git, SVN, TFS) and files with particular\n        Mimetype&nbsp;\n        <Tooltip title=\"Configure mimetypes from Admin-Customize-Skip MimeTypes from scanning\" />\n      </InputContainer>\n    </div>\n  );\n}\n\nIgnoreScm.propTypes = {\n  ignoreScm: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default IgnoreScm;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\nfunction AccessLevel({ accessLevel, handleChange }) {\n  return (\n    <div id=\"upload-access-level\">\n      <InputContainer\n        type=\"radio\"\n        value=\"private\"\n        name=\"accessLevel\"\n        id=\"upload-access-level-private\"\n        checked={accessLevel === \"private\"}\n        onChange={(e) => handleChange(e)}\n      >\n        Visible only for active group&nbsp;\n        <Tooltip title=\"which is the currently selected group\" />\n      </InputContainer>\n      <InputContainer\n        type=\"radio\"\n        value=\"protected\"\n        name=\"accessLevel\"\n        id=\"upload-access-level-protected\"\n        checked={accessLevel === \"protected\"}\n        onChange={(e) => handleChange(e)}\n      >\n        Visible for all groups&nbsp;\n        <Tooltip title=\"which are accessible by you now\" />\n      </InputContainer>\n      <InputContainer\n        type=\"radio\"\n        value=\"public\"\n        name=\"accessLevel\"\n        id=\"upload-access-level-public\"\n        checked={accessLevel === \"public\"}\n        onChange={(e) => handleChange(e)}\n      >\n        Make Public&nbsp;\n        <Tooltip title=\"visible for all users\" />\n      </InputContainer>\n    </div>\n  );\n}\n\nAccessLevel.propTypes = {\n  accessLevel: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default AccessLevel;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport InputContainer from \"components/Widgets/Input\";\n\nfunction OptionalAnalysis({ analysis, handleChange }) {\n  return (\n    <div id=\"uplod-optional-analysis\" className=\"mt-4\">\n      <p className=\"font-demi\">Select optional analysis</p>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.bucket}\n        name=\"bucket\"\n        id=\"upload-analysis-bucket\"\n        onChange={(e) => handleChange(e)}\n      >\n        Bucket Analysis\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.copyrightEmailAuthor}\n        name=\"copyrightEmailAuthor\"\n        id=\"upload-analysis-copyright-email-author\"\n        onChange={(e) => handleChange(e)}\n      >\n        Copyright/Email/URL/Author Analysis\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.ecc}\n        name=\"ecc\"\n        id=\"upload-analysis-ecc\"\n        onChange={(e) => handleChange(e)}\n      >\n        ECC Analysis, scanning for text fragments potentially relevant for\n        export control\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.keyword}\n        name=\"keyword\"\n        id=\"upload-analysis-keyword\"\n        onChange={(e) => handleChange(e)}\n      >\n        Keyword Analysis\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.mime}\n        name=\"mime\"\n        id=\"upload-analysis-mime\"\n        onChange={(e) => handleChange(e)}\n      >\n        MIME-type Analysis (Determine mimetype of every file. Not needed for\n        licenses or buckets)\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.monk}\n        name=\"monk\"\n        id=\"upload-analysis-monk\"\n        onChange={(e) => handleChange(e)}\n      >\n        Monk License Analysis, scanning for licenses performing a text\n        comparison\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.nomos}\n        name=\"nomos\"\n        id=\"upload-analysis-nomos\"\n        onChange={(e) => handleChange(e)}\n      >\n        Nomos License Analysis, scanning for licenses using regular expressions\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.ojo}\n        name=\"ojo\"\n        id=\"upload-analysis-ojo\"\n        onChange={(e) => handleChange(e)}\n      >\n        Ojo License Analysis, scanning for licenses using\n        SPDX-License-Identifier\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.package}\n        name=\"package\"\n        id=\"upload-analysis-package\"\n        onChange={(e) => handleChange(e)}\n      >\n        Package Analysis (Parse package headers)\n      </InputContainer>\n    </div>\n  );\n}\n\nOptionalAnalysis.propTypes = {\n  analysis: PropTypes.shape({\n    bucket: PropTypes.bool.isRequired,\n    copyrightEmailAuthor: PropTypes.bool.isRequired,\n    ecc: PropTypes.bool.isRequired,\n    keyword: PropTypes.bool.isRequired,\n    mime: PropTypes.bool.isRequired,\n    monk: PropTypes.bool.isRequired,\n    nomos: PropTypes.bool.isRequired,\n    ojo: PropTypes.bool.isRequired,\n    package: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default OptionalAnalysis;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\nfunction LicenseDecider({ decider, handleChange }) {\n  return (\n    <div id=\"upload-concluded-license-decider\" className=\"mt-4\">\n      <p className=\"font-demi\">\n        Automatic Concluded License Decider,\n        <Tooltip title=\"only for relevant files\" /> based on\n      </p>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.nomosMonk}\n        name=\"nomosMonk\"\n        id=\"upload-decider-nomos-monk\"\n        onChange={(e) => handleChange(e)}\n      >\n        ... scanners matches if all Nomos findings are within the Monk findings\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.ojoDecider}\n        name=\"ojoDecider\"\n        id=\"upload-decider-ojo-decider\"\n        onChange={(e) => handleChange(e)}\n      >\n        .. scanners matches if Ojo findings are no contradiction with other\n        findings\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.bulkReused}\n        name=\"bulkReused\"\n        id=\"upload-decider-bulk-reused\"\n        onChange={(e) => handleChange(e)}\n      >\n        ... bulk phrases from reused packages\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.newScanner}\n        name=\"newScanner\"\n        id=\"upload-decider-new-scanner\"\n        onChange={(e) => handleChange(e)}\n      >\n        ... new scanner results, i.e., decisions were marked as work in progress\n        if new scanner finds additional licenses\n      </InputContainer>\n    </div>\n  );\n}\n\nLicenseDecider.propTypes = {\n  decider: PropTypes.shape({\n    nomosMonk: PropTypes.bool.isRequired,\n    bulkReused: PropTypes.bool.isRequired,\n    newScanner: PropTypes.bool.isRequired,\n    ojoDecider: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default LicenseDecider;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\n// Required services for calling APIs\nimport { getAllFolders } from \"services/folders\";\nimport { getUploadsFolderId } from \"services/organizeUploads\";\nimport { getAllGroups } from \"services/groups\";\n\nimport messages from \"constants/messages\";\n\nconst UploadReuse = ({ reuse, handleChange }) => {\n  const initialGroupList = [{ id: 3, name: \"fossy\" }];\n  const initialFolderList = [\n    {\n      id: 1,\n      name: \"Software Repository\",\n      description: \"Top Folder\",\n      parent: null,\n    },\n  ];\n  const initialUploadList = [\n    {\n      folderId: 1,\n      uploadId: null,\n      uploadName: \"\",\n      uploadDescription: \"\",\n    },\n  ];\n  const [reuseData, setReuseData] = useState({\n    groupList: initialGroupList,\n    folderList: initialFolderList,\n    uploadList: initialUploadList,\n    reuseFolder: 1,\n  });\n\n  useEffect(() => {\n    setReuseData((prevData) => ({ ...prevData, groupList: getAllGroups() }));\n  }, []);\n\n  useEffect(() => {\n    getAllFolders(reuse.reuseGroup)\n      .then((res) => {\n        setReuseData((prevData) => ({ ...prevData, folderList: res }));\n      })\n      .catch(() => {});\n  }, [reuse.reuseGroup]);\n\n  useEffect(() => {\n    getUploadsFolderId(reuseData.reuseFolder, reuse.reuseGroup)\n      .then((res) => {\n        setReuseData((prevData) => ({ ...prevData, uploadList: res }));\n      })\n      .catch(() => {});\n  }, [reuse.reuseGroup, reuseData.reuseFolder]);\n\n  const handleReuseDataChange = (e) => {\n    setReuseData((prevData) => ({\n      ...prevData,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  return (\n    <div id=\"upload-reuse\" className=\"mt-4\">\n      <p className=\"font-demi\">\n        (Optional) Reuse\n        <Tooltip title=\"copy clearing decisions if there is the same file hash between two files\" />\n      </p>\n      <InputContainer\n        type=\"select\"\n        name=\"reuseGroup\"\n        id=\"upload-file-reuse-group\"\n        onChange={handleChange}\n        options={reuseData.groupList}\n        value={reuse.reuseGroup}\n        property=\"name\"\n        valueProperty=\"name\"\n        noDataMessage={messages.noGroup}\n      >\n        Select the reuse group:\n      </InputContainer>\n      <InputContainer\n        type=\"select\"\n        name=\"reuseFolder\"\n        id=\"upload-file-reuse-folder\"\n        onChange={handleReuseDataChange}\n        options={reuseData.folderList}\n        value={reuseData.reuseFolder}\n        property=\"name\"\n        noDataMessage={messages.noFolder}\n      >\n        Select the reuse folder:\n      </InputContainer>\n      <InputContainer\n        type=\"select\"\n        name=\"reuseUpload\"\n        id=\"upload-file-reuse-upload\"\n        onChange={handleChange}\n        options={reuseData.uploadList}\n        value={parseInt(reuse.reuseUpload, 10)}\n        property=\"uploadname\"\n        valueProperty=\"id\"\n        noDataMessage={messages.noUploads}\n      >\n        Select the reuse upload:\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseEnhanced}\n        name=\"reuseEnhanced\"\n        id=\"upload-file-reuse-enhanced\"\n        onChange={handleChange}\n      >\n        Enhanced reuse (slower)\n        <Tooltip title=\"will copy a clearing decision if the two files differ by one line determined by a diff tool\" />\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseMain}\n        name=\"reuseMain\"\n        id=\"upload-file-reuse-main\"\n        onChange={handleChange}\n      >\n        Reuse main license/s\n        <Tooltip title=\"will copy a main license decision if any\" />\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseReport}\n        name=\"reuseReport\"\n        id=\"upload-file-reuse-report\"\n        onChange={handleChange}\n      >\n        Reuse report configuration settings\n        <Tooltip title=\"use to copy all the information from conf page(if any)\" />\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseCopyright}\n        name=\"reuseCopyright\"\n        id=\"upload-file-reuse-copyright\"\n        onChange={handleChange}\n      >\n        Reuse edited and deactivated copyrights\n        <Tooltip title=\"use to copy edited and deactivated copyrights from the reused package\" />\n      </InputContainer>\n    </div>\n  );\n};\n\nUploadReuse.propTypes = {\n  reuse: PropTypes.shape({\n    reuseUpload: PropTypes.number.isRequired,\n    reuseGroup: PropTypes.string.isRequired,\n    reuseMain: PropTypes.bool.isRequired,\n    reuseEnhanced: PropTypes.bool.isRequired,\n    reuseReport: PropTypes.bool.isRequired,\n    reuseCopyright: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default UploadReuse;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport IgnoreScm from \"./IgnoreScm\";\nimport AccessLevel from \"./AccessLevel\";\nimport OptionalAnalysis from \"./OptionalAnalysis\";\nimport LicenseDecider from \"./LicenseDecider\";\nimport UploadReuse from \"./UploadReuse\";\n\nfunction CommonFields({\n  accessLevel,\n  ignoreScm,\n  analysis,\n  decider,\n  reuse,\n  handleChange,\n  handleScanChange,\n}) {\n  return (\n    <>\n      {ignoreScm && (\n        <IgnoreScm ignoreScm={ignoreScm} handleChange={handleChange} />\n      )}\n      {accessLevel && (\n        <AccessLevel accessLevel={accessLevel} handleChange={handleChange} />\n      )}\n      {analysis && (\n        <OptionalAnalysis analysis={analysis} handleChange={handleScanChange} />\n      )}\n      {decider && (\n        <LicenseDecider decider={decider} handleChange={handleScanChange} />\n      )}\n      {reuse && <UploadReuse reuse={reuse} handleChange={handleScanChange} />}\n    </>\n  );\n}\n\nCommonFields.propTypes = {\n  accessLevel: PropTypes.string,\n  ignoreScm: PropTypes.bool,\n  analysis: PropTypes.shape({\n    bucket: PropTypes.bool.isRequired,\n    copyrightEmailAuthor: PropTypes.bool.isRequired,\n    ecc: PropTypes.bool.isRequired,\n    keyword: PropTypes.bool.isRequired,\n    mime: PropTypes.bool.isRequired,\n    monk: PropTypes.bool.isRequired,\n    nomos: PropTypes.bool.isRequired,\n    ojo: PropTypes.bool.isRequired,\n    package: PropTypes.bool.isRequired,\n  }),\n  decider: PropTypes.shape({\n    nomosMonk: PropTypes.bool.isRequired,\n    bulkReused: PropTypes.bool.isRequired,\n    newScanner: PropTypes.bool.isRequired,\n    ojoDecider: PropTypes.bool.isRequired,\n  }),\n  reuse: PropTypes.shape({\n    reuseUpload: PropTypes.number.isRequired,\n    reuseGroup: PropTypes.string.isRequired,\n    reuseMain: PropTypes.bool.isRequired,\n    reuseEnhanced: PropTypes.bool.isRequired,\n    reuseReport: PropTypes.bool.isRequired,\n    reuseCopyright: PropTypes.bool.isRequired,\n  }),\n  handleChange: PropTypes.func,\n  handleScanChange: PropTypes.func,\n};\n\nexport default CommonFields;\n"],"sourceRoot":""}