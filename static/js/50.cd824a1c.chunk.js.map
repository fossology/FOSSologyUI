{"version":3,"sources":["api/upload.js","services/upload.js","pages/Upload/Vcs/index.jsx","shared/helper.js","constants/constants.js","services/groups.js","api/groups.js","services/jobs.js","api/jobs.js","components/Upload/CommonFields/IgnoreScm/index.jsx","components/Upload/CommonFields/AccessLevel/index.jsx","components/Upload/CommonFields/OptionalAnalysis/index.jsx","components/Upload/CommonFields/LicenseDecider/index.jsx","components/Upload/CommonFields/UploadReuse/index.jsx","components/Upload/CommonFields/index.jsx"],"names":["createUploadApi","folderId","uploadDescription","accessLevel","ignoreScm","fileInput","url","endpoints","upload","uploadCreate","formdata","FormData","append","name","sendRequest","method","isMultipart","headers","Authorization","getToken","public","uploadType","body","propTypes","PropTypes","number","string","bool","createUploadFile","then","res","createUploadVcs","header","createUploadVcsApi","createUploadUrl","createUploadUrlApi","getUploadById","uploadId","retries","getId","getUploadByIdApi","getUploadSummary","getSummary","getUploadSummaryApi","getUploadLicense","agent","getLicense","queryParams","getUploadLicenseApi","UploadFromVcs","useState","initialStateVcs","uploadVcsData","setUploadVcsData","initialFolderList","folderList","setFolderList","initialScanFileData","scanFileData","setScanFileData","initialVcsData","vcsData","setVcsData","message","setMessage","loading","setLoading","showMessage","setShowMessage","handleChange","e","target","type","checked","files","value","handleVcsChange","useEffect","getAllFolders","catch","error","handleError","title","className","text","setShow","id","onChange","options","property","typeVcs","vcsUrl","vcsBranch","vcsUsername","vcsPassword","vcsName","htmlFor","rows","analysis","decider","reuse","handleScanChange","Object","keys","find","parseInt","onClick","preventDefault","window","scrollTo","top","messages","queuedUpload","setTimeout","scheduleAnalysis","scheduledAnalysis","finally","as","animation","size","role","randomString","length","result","characters","charactersLength","i","charAt","Math","floor","random","getDate","day","Date","prototype","addDays","days","currentDate","this","valueOf","setDate","toISOString","split","getNameInitials","nameList","substring","toUpperCase","map","n","index","join","getReportIdFromUrl","matches","match","getFileNameFromContentDispostionHeader","contentDispostion","fileName","trim","statusOptions","assignOptions","actionsOptions","reportFormat","disabled","initialMessage","initialState","searchType","filename","tag","filesizemin","filesizemax","license","copyright","page","limit","initialMessageSearch","initialStateFile","initialScanFileDataFile","defaultAgentsList","nomosMonk","bulkReused","newScanner","ojoDecider","reuseUpload","reuseGroup","getLocalStorage","default_group","reuseMain","reuseEnhanced","reuseReport","reuseCopyright","initialFolderListFile","description","parent","initialStateImportReport","folder","report","addNewLicensesAs","addConcludedAsDecisions","addLicenseInfoFromInfoInFile","addLicenseInfoFromConcluded","addConcludedAsDecisionsOverwrite","addConcludedAsDecisionsTBD","addCopyrights","initialStateUploadFromServer","groupName","initialStateUrl","initialUrlData","vcsType","entriesOptions","entry","initialMantainanceFields","a","A","F","g","E","L","N","R","t","T","D","Z","I","v","o","l","logsDate","goldDate","accessLevels","userStatus","initialAddUserData","user_pass","rootFolderId","emailNotification","email","defaultVisibility","defaultBucketpool","agents","mime","monk","ojo","bucket","copyright_email_author","ecc","keyword","nomos","package","reso","heritage","bucketPool","getAllGroups","fetchAllGroups","admin","groups","getAll","addGroupName","getAllGroupsApi","setLocalStorage","createGroup","create","createGroupApi","deleteGroup","delete","deleteGroupApi","fetchAllDeletableGroups","getAllDeletable","getAllDeletableGroupsApi","getAllJob","jobsDatalist","jobs","getAllJobApi","pages","getAllAdminJob","allJobs","getAllAdminJobApi","scanData","copyrightEmailAuthor","nomos_monk","bulk_reused","new_scanner","ojo_decider","reuse_upload","reuse_group","reuse_main","reuse_enhanced","reuse_report","reuse_copyright","scheduleAnalysisApi","scheduleReport","scheduleReportApi","downloadReport","reportId","isFile","downloadReportApi","importReport","reqBody","importReportApi","IgnoreScm","AccessLevel","OptionalAnalysis","Input","LicenseDecider","UploadReuse","groupList","uploadList","uploadName","reuseFolder","reuseData","setReuseData","prevData","getUploadsFolderId","valueProperty","noDataMessage","noGroup","noFolder","noUploads","CommonFields"],"mappings":"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","file":"static/js/50.cd824a1c.chunk.js","sourcesContent":["/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport PropTypes from \"prop-types\";\nimport endpoints from \"constants/endpoints\";\n\n// Getting Authorization Token\nimport { getToken } from \"shared/authHelper\";\n\n// Function for calling the fetch function for the APIs\nimport sendRequest from \"./sendRequest\";\n\n// Create Uploads from File\nexport const createUploadApi = (\n  folderId,\n  uploadDescription,\n  accessLevel,\n  ignoreScm,\n  fileInput\n) => {\n  const url = endpoints.upload.uploadCreate();\n  const formdata = new FormData();\n  if (fileInput) {\n    formdata.append(\"fileInput\", fileInput, fileInput?.name);\n  }\n  return sendRequest({\n    url,\n    method: \"POST\",\n    isMultipart: true,\n    headers: {\n      Authorization: getToken(),\n      folderId,\n      uploadDescription,\n      public: accessLevel,\n      ignoreScm,\n      uploadType: \"\",\n    },\n    body: formdata,\n  });\n};\n\n// Create Uploads from Version Control System\nexport const createUploadVcsApi = (header, body) => {\n  const url = endpoints.upload.uploadCreate();\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      ...header,\n      Authorization: getToken(),\n    },\n    body,\n  });\n};\n\n// Create Uploads from URL\nexport const createUploadUrlApi = (header, body) => {\n  const url = endpoints.upload.uploadCreate();\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      ...header,\n      Authorization: getToken(),\n    },\n    body,\n  });\n};\n\n// Getting a Upload by id\nexport const getUploadByIdApi = (uploadId, retries) => {\n  const url = endpoints.upload.getId(uploadId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n    retries,\n    headers: {\n      Authorization: getToken(),\n    },\n  });\n};\n\n// Getting a Upload Summary\nexport const getUploadSummaryApi = (uploadId) => {\n  const url = endpoints.upload.getSummary(uploadId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n  });\n};\n\n// Getting a Upload License\nexport const getUploadLicenseApi = (uploadId, agent) => {\n  const url = endpoints.upload.getLicense(uploadId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n    queryParams: {\n      agent,\n    },\n  });\n};\n\ncreateUploadApi.propTypes = {\n  folderId: PropTypes.number,\n  uploadDescription: PropTypes.string,\n  accessLevel: PropTypes.string,\n  ignoreScm: PropTypes.bool,\n  fileInput: PropTypes.string,\n};\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n SPDX-License-Identifier: GPL-2.0\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport {\n  createUploadApi,\n  getUploadByIdApi,\n  createUploadVcsApi,\n  createUploadUrlApi,\n  getUploadSummaryApi,\n  getUploadLicenseApi,\n} from \"api/upload\";\n\n// Create Uploads from File\nexport const createUploadFile = ({\n  folderId,\n  uploadDescription,\n  accessLevel,\n  ignoreScm,\n  fileInput,\n}) => {\n  return createUploadApi(\n    folderId,\n    uploadDescription,\n    accessLevel,\n    ignoreScm,\n    fileInput\n  ).then((res) => {\n    return res;\n  });\n};\n\n// Create Uploads from Version Control System\nexport const createUploadVcs = (header, body) => {\n  return createUploadVcsApi(header, body).then((res) => {\n    return res;\n  });\n};\n\n// Create Uploads from URL\nexport const createUploadUrl = (header, body) => {\n  return createUploadUrlApi(header, body).then((res) => {\n    return res;\n  });\n};\n\n// Getting a Upload by id\nexport const getUploadById = (uploadId, retries) => {\n  return getUploadByIdApi(uploadId, retries).then((res) => {\n    return res;\n  });\n};\n\n// Getting a Upload Summary\nexport const getUploadSummary = (uploadId) => {\n  return getUploadSummaryApi(uploadId).then((res) => {\n    return res;\n  });\n};\n\n// Getting a Upload License\nexport const getUploadLicense = (uploadId, agent) => {\n  return getUploadLicenseApi(uploadId, agent).then((res) => {\n    return res;\n  });\n};\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React, { useState, useEffect } from \"react\";\nimport messages from \"constants/messages\";\n\n// Title\nimport Title from \"components/Title\";\n\n// Widgets\nimport { Alert, Button, InputContainer, Spinner } from \"components/Widgets\";\n\n// Common Fields for all the Uploads\nimport CommonFields from \"components/Upload/CommonFields\";\n\n// Required functions for calling APIs\nimport { getAllFolders } from \"services/folders\";\nimport { createUploadVcs, getUploadById } from \"services/upload\";\nimport { scheduleAnalysis } from \"services/jobs\";\n\n// Default Agents list\nimport {\n  initialScanFileData,\n  initialFolderList,\n  initialStateVcs,\n  initialVcsData,\n  typeVcs,\n} from \"constants/constants\";\n\n// Helper function for error handling\nimport { handleError } from \"shared/helper\";\n\nconst UploadFromVcs = () => {\n  // Upload Id required for scheduling Analysis\n  let uploadId;\n\n  // Data required for creating the upload\n  const [uploadVcsData, setUploadVcsData] = useState(initialStateVcs);\n\n  // Setting the list for all the folders names\n  const [folderList, setFolderList] = useState(initialFolderList);\n\n  // Setting the data for scheduling analysis of an uploads\n  const [scanFileData, setScanFileData] = useState(initialScanFileData);\n\n  // Data required for creating the upload from Version Control System\n  const [vcsData, setVcsData] = useState(initialVcsData);\n\n  // State Variables for handling Error Boundaries\n  const [message, setMessage] = useState();\n  const [loading, setLoading] = useState(false);\n  const [showMessage, setShowMessage] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    createUploadVcs(uploadVcsData, vcsData)\n      .then((res) => {\n        window.scrollTo({ top: 0 });\n        setMessage({\n          type: \"success\",\n          text: `${messages.queuedUpload} #${res.message}`,\n        });\n        uploadId = res.message;\n      })\n      // Calling the api for maximum 10 times to check whether the upload is unpacked by the agent\n      .then(() => getUploadById(uploadId, 10))\n      .then(() =>\n        setTimeout(\n          () =>\n            scheduleAnalysis(uploadVcsData.folderId, uploadId, scanFileData)\n              .then(() => {\n                window.scrollTo({ top: 0 });\n                setMessage({\n                  type: \"success\",\n                  text: messages.scheduledAnalysis,\n                });\n                setUploadVcsData(initialStateVcs);\n                setScanFileData(initialScanFileData);\n              })\n              .catch((error) => {\n                handleError(error, setMessage);\n              }),\n          200000\n        )\n      )\n      .catch((error) => {\n        handleError(error, setMessage);\n      })\n      .finally(() => {\n        setLoading(false);\n        setShowMessage(true);\n      });\n  };\n  const handleChange = (e) => {\n    if (e.target.type === \"checkbox\") {\n      setUploadVcsData({\n        ...uploadVcsData,\n        [e.target.name]: e.target.checked,\n      });\n    } else if (e.target.type === \"file\") {\n      setUploadVcsData({\n        ...uploadVcsData,\n        [e.target.name]: e.target.files[0],\n      });\n    } else {\n      setUploadVcsData({\n        ...uploadVcsData,\n        [e.target.name]: e.target.value,\n      });\n    }\n  };\n  const handleScanChange = (e) => {\n    const { name } = e.target;\n    if (\n      Object.keys(scanFileData.analysis).find((analysis) => analysis === name)\n    ) {\n      setScanFileData({\n        ...scanFileData,\n        analysis: {\n          ...scanFileData.analysis,\n          [e.target.name]: e.target.checked,\n        },\n      });\n    } else if (\n      Object.keys(scanFileData.decider).find((decider) => decider === name)\n    ) {\n      setScanFileData({\n        ...scanFileData,\n        decider: {\n          ...scanFileData.decider,\n          [e.target.name]: e.target.checked,\n        },\n      });\n    } else {\n      setScanFileData({\n        ...scanFileData,\n        reuse: {\n          ...scanFileData.reuse,\n          [e.target.name]:\n            e.target.type === \"checkbox\"\n              ? e.target.checked\n              : parseInt(e.target.value, 10) || e.target.value,\n        },\n      });\n    }\n  };\n  const handleVcsChange = (e) => {\n    setVcsData({\n      ...vcsData,\n      [e.target.name]: e.target.value,\n    });\n  };\n  useEffect(() => {\n    getAllFolders()\n      .then((res) => {\n        setFolderList(res);\n      })\n      .catch((error) => {\n        handleError(error, setMessage);\n        setShowMessage(true);\n      });\n  }, []);\n  return (\n    <>\n      <Title title=\"Upload from Version Control System\" />\n      <div className=\"main-container my-3\">\n        {showMessage && (\n          <Alert\n            type={message.type}\n            message={message.text}\n            setShow={setShowMessage}\n          />\n        )}\n        <div className=\"row\">\n          <div className=\"col-lg-8 col-md-12 col-sm-12 col-12\">\n            <h3 className=\"font-size-main-heading\">\n              Upload From Version Control System\n            </h3>\n            <p className=\"font-demi my-3\">\n              To manage your own group permissions go into Admin &gt; Groups\n              &gt; Manage Group Users. To manage permissions for this one\n              upload, go to Admin &gt; Upload Permissions.\n            </p>\n            <p>\n              You can upload source code from a version control system; one risk\n              is that FOSSology will store your username/password of a\n              repository to database, also run checkout source code from command\n              line with username and password explicitly.\n            </p>\n            <form className=\"my-3\">\n              <InputContainer\n                type=\"select\"\n                name=\"folderId\"\n                id=\"upload-folder-id\"\n                onChange={(e) => handleChange(e)}\n                options={folderList}\n                property=\"name\"\n                value={folderList?.id}\n              >\n                Select the folder for storing the uploaded files:\n              </InputContainer>\n              <InputContainer\n                type=\"select\"\n                name=\"vcsType\"\n                id=\"upload-vcs-type\"\n                onChange={(e) => handleVcsChange(e)}\n                options={typeVcs}\n                property=\"type\"\n              >\n                Select the type of version control system:\n              </InputContainer>\n              <InputContainer\n                type=\"text\"\n                name=\"vcsUrl\"\n                id=\"upload-vcs-url-repo\"\n                onChange={(e) => handleVcsChange(e)}\n                value={vcsData.vcsUrl}\n              >\n                Enter the URL of the repo:\n              </InputContainer>\n              <div className=\"font-size-small\">\n                Note: The URL can begin with HTTP://, HTTPS:// . When do git\n                upload, if https url fails, please try http URL.\n              </div>\n              <InputContainer\n                type=\"text\"\n                name=\"vcsBranch\"\n                id=\"upload-vcs-branch\"\n                onChange={(e) => handleVcsChange(e)}\n                value={vcsData.vcsBranch}\n              >\n                (Optional for Git) Branch name:\n              </InputContainer>\n              <InputContainer\n                type=\"text\"\n                name=\"vcsUsername\"\n                id=\"upload-vcs-username\"\n                onChange={(e) => handleVcsChange(e)}\n                value={vcsData.vcsUsername}\n              >\n                (Optional) Username:\n              </InputContainer>\n              <InputContainer\n                type=\"text\"\n                name=\"vcsPassword\"\n                id=\"upload-vcs-branch\"\n                onChange={(e) => handleVcsChange(e)}\n                value={vcsData.vcsPassword}\n              >\n                (Optional) Password:\n              </InputContainer>\n              <InputContainer\n                type=\"text\"\n                name=\"vcsName\"\n                id=\"upload-vcs-name\"\n                onChange={(e) => handleVcsChange(e)}\n                value={vcsData.vcsName}\n              >\n                (Optional) Enter a viewable name for this file (directory):\n              </InputContainer>\n              <div className=\"font-size-small\">\n                Note: If no name is provided, then the uploaded file (directory)\n                name will be used.\n              </div>\n              <div className=\"my-2\">\n                <label htmlFor=\"upload\" className=\"font-demi w-100\">\n                  (Optional) Enter a description of this file:\n                  <textarea\n                    name=\"uploadDescription\"\n                    className=\"form-control font-regular mt-2\"\n                    value={uploadVcsData.uploadDescription}\n                    id=\"upload-file-description\"\n                    rows=\"3\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                </label>\n              </div>\n              <CommonFields\n                accessLevel={uploadVcsData.accessLevel}\n                ignoreScm={uploadVcsData.ignoreScm}\n                analysis={scanFileData.analysis}\n                decider={scanFileData.decider}\n                reuse={scanFileData.reuse}\n                handleChange={handleChange}\n                handleScanChange={handleScanChange}\n              />\n              <Button type=\"submit\" onClick={handleSubmit} className=\"mt-4\">\n                {loading ? (\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                ) : (\n                  \"Upload\"\n                )}\n              </Button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UploadFromVcs;\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\n// Random string generator\nexport const randomString = (length) => {\n  let result = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\n// Get date in YYYY-MM-DD format\nexport const getDate = (day) => {\n  // eslint-disable-next-line no-extend-native, func-names\n  Date.prototype.addDays = function (days) {\n    const currentDate = new Date(this.valueOf());\n    currentDate.setDate(currentDate.getDate() + days);\n    return currentDate;\n  };\n  const date = new Date();\n  return date.addDays(day).toISOString().split(\"T\")[0];\n};\n\n// Returns the initials of given name\nexport const getNameInitials = (name) => {\n  if (!name) {\n    return name;\n  }\n  // Convert name into array of words\n  const nameList = name.split(\" \");\n  // For single word name return first 2 characters\n  if (nameList.length === 1) {\n    return nameList[0].substring(0, 2).toUpperCase();\n  }\n  // Return the first 3 characters of the initials\n  return nameList\n    .map((n, index) => {\n      if (index < 3) {\n        return n[0];\n      }\n      return null;\n    })\n    .join(\"\")\n    .toUpperCase();\n};\n\n// Common handle error component\nexport const handleError = (error, setMessage) => {\n  window.scrollTo({ top: 0 });\n  setMessage({\n    type: \"danger\",\n    text: error.message,\n  });\n};\n\n// Extract report id from url\nexport const getReportIdFromUrl = (url) => {\n  const matches = url.match(/report\\/([0-9]+)/);\n  if (matches != null) {\n    return matches[1];\n  }\n  return null;\n};\n\nexport const getFileNameFromContentDispostionHeader = (header) => {\n  const contentDispostion = header.split(\";\");\n  let fileName = \"download.txt\";\n  // eslint-disable-next-line no-restricted-syntax\n  for (const headerElement of contentDispostion) {\n    const matches = headerElement.trim().match(/filename=\"(.*)\"/);\n    if (matches != null) {\n      fileName = matches[1];\n      break;\n    }\n  }\n\n  return fileName;\n};\n","/*\n Copyright (C) 2022 Soham Banerjee(sohambanerjee4abc@hotmail.com), Krishna Mahato (krishhtrishh9304@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\n// constants used in Browse component\nimport { defaultAgentsList, getLocalStorage } from \"shared/storageHelper\";\n\nexport const statusOptions = [\n  {\n    id: 0,\n    name: \"open\",\n  },\n  {\n    id: 1,\n    name: \"in progress\",\n  },\n  {\n    id: 2,\n    name: \"closed\",\n  },\n  {\n    id: 3,\n    name: \"rejected\",\n  },\n];\n\nexport const assignOptions = [\n  {\n    id: 0,\n    name: \"me\",\n  },\n  {\n    id: 1,\n    name: \"unassigned\",\n  },\n];\nexport const actionsOptions = [\n  {\n    id: 0,\n    name: \"-- select action --\",\n    reportFormat: \"0\",\n    disabled: true,\n  },\n  {\n    id: 1,\n    name: \"Export DEP5\",\n    reportFormat: \"dep5\",\n  },\n  {\n    id: 2,\n    name: \"Export ReadMe_OSS\",\n    reportFormat: \"readmeoss\",\n  },\n  {\n    id: 3,\n    name: \"Export SPDX RDF\",\n    reportFormat: \"spdx2\",\n  },\n  {\n    id: 4,\n    name: \"Export SPDX tag:value\",\n    reportFormat: \"spdx2tv\",\n  },\n  {\n    id: 5,\n    name: \"Export Unified Report\",\n    reportFormat: \"unifiedreport\",\n  },\n  {\n    id: 6,\n    name: \"Import Report\",\n    reportFormat: \"importReport\",\n  },\n];\nexport const initialMessage = {\n  type: \"success\",\n  text: \"\",\n};\n\nexport const initialState = {\n  searchType: \"allfiles\",\n  uploadId: \"\",\n  filename: \"\",\n  tag: \"\",\n  filesizemin: \"\",\n  filesizemax: \"\",\n  license: \"\",\n  copyright: \"\",\n  page: 1,\n  limit: 10,\n};\n// constants used in the Search component\nexport const initialMessageSearch = {\n  type: \"danger\",\n  text: \"\",\n};\n\n// constants used in Upload/file component\nexport const initialStateFile = {\n  folderId: 1,\n  uploadDescription: \"\",\n  accessLevel: \"protected\",\n  ignoreScm: false,\n  fileInput: null,\n};\nexport const initialScanFileDataFile = {\n  analysis: defaultAgentsList(),\n  decider: {\n    nomosMonk: false,\n    bulkReused: false,\n    newScanner: false,\n    ojoDecider: false,\n  },\n  reuse: {\n    reuseUpload: 0,\n    reuseGroup: getLocalStorage(\"user\")?.default_group,\n    reuseMain: false,\n    reuseEnhanced: false,\n    reuseReport: false,\n    reuseCopyright: false,\n  },\n};\nexport const initialFolderListFile = [\n  {\n    id: 1,\n    name: \"Software Repository\",\n    description: \"Top Folder\",\n    parent: null,\n  },\n];\n// constants for upload/ImportReport\nexport const initialStateImportReport = {\n  folder: 1,\n  upload: \"\",\n  report: null,\n  addNewLicensesAs: \"candidate\",\n  addConcludedAsDecisions: true,\n  addLicenseInfoFromInfoInFile: true,\n  addLicenseInfoFromConcluded: false,\n  addConcludedAsDecisionsOverwrite: true,\n  addConcludedAsDecisionsTBD: true,\n  addCopyrights: false,\n};\n\n// constants for upload/UploadFromServer\nexport const initialStateUploadFromServer = {\n  folderId: 1,\n  uploadDescription: \"\",\n  accessLevel: \"protected\",\n  ignoreScm: false,\n  uploadType: \"server\",\n  groupName: \"\",\n};\n\n// constants for upload/url\nexport const initialStateUrl = {\n  folderId: 1,\n  uploadDescription: \"\",\n  accessLevel: \"protected\",\n  ignoreScm: false,\n  uploadType: \"url\",\n};\n\nexport const initialUrlData = {\n  url: \"\",\n  name: \"\",\n};\n\n// constants from upload/vcs\nexport const initialStateVcs = {\n  folderId: 1,\n  uploadDescription: \"\",\n  accessLevel: \"protected\",\n  ignoreScm: false,\n  uploadType: \"vcs\",\n};\n\nexport const initialVcsData = {\n  vcsType: \"git\",\n  vcsUrl: \"\",\n  vcsBranch: \"\",\n  vcsName: \"\",\n  vcsUsername: \"\",\n  vcsPassword: \"\",\n};\nexport const typeVcs = [\n  { id: \"git\", type: \"Git\" },\n  { id: \"svn\", type: \"SVN\" },\n];\n\n// common & reused\nexport const entriesOptions = [\n  {\n    id: 10,\n    entry: \"10\",\n  },\n  {\n    id: 25,\n    entry: \"25\",\n  },\n  {\n    id: 50,\n    entry: \"50\",\n  },\n  {\n    id: 100,\n    entry: \"100\",\n  },\n];\nexport const initialScanFileData = {\n  analysis: defaultAgentsList(),\n  decider: {\n    nomosMonk: false,\n    bulkReused: false,\n    newScanner: false,\n    ojoDecider: false,\n  },\n  reuse: {\n    reuseUpload: 0,\n    reuseGroup: getLocalStorage(\"user\")?.default_group,\n    reuseMain: false,\n    reuseEnhanced: false,\n    reuseReport: false,\n    reuseCopyright: false,\n  },\n};\nexport const initialFolderList = [\n  {\n    id: 1,\n    name: \"Software Repository\",\n    description: \"Top Folder\",\n    parent: null,\n  },\n];\n\nexport const initialMantainanceFields = {\n  a: false,\n  A: false,\n  F: false,\n  g: false,\n  E: false,\n  L: false,\n  N: false,\n  R: false,\n  t: false,\n  T: false,\n  D: false,\n  Z: false,\n  I: false,\n  v: false,\n  o: false,\n  l: false,\n  logsDate: \"\",\n  goldDate: \"\",\n};\n\nexport const accessLevels = [\n  {\n    id: 0,\n    name: \"None (very basic, no database access)\",\n    disabled: false,\n    value: \"none\",\n  },\n  {\n    id: 1,\n    name: \"Read-only (read, but no writes or downloads)\",\n    disabled: false,\n    value: \"read_only\",\n  },\n  {\n    id: 2,\n    name: \"Read-Write (read, download, or edit information)\",\n    disabled: false,\n    value: \"read_write\",\n  },\n  {\n    id: 3,\n    name: \"Clearing Administrator (read, download, edit information and edit decisions)\",\n    disabled: false,\n    value: \"clearing_admin\",\n  },\n  {\n    id: 4,\n    name: \"Full Administrator (all access including adding and deleting users)\",\n    disabled: false,\n    value: \"admin\",\n  },\n];\n\nexport const userStatus = [\n  {\n    id: 0,\n    name: \"Active\",\n    disabled: false,\n    value: \"active\",\n  },\n  {\n    id: 1,\n    name: \"Inactive\",\n    disabled: false,\n    value: \"inactive\",\n  },\n];\n\nexport const initialAddUserData = {\n  name: \"\",\n  user_pass: null,\n  description: \"\",\n  accessLevel: \"\",\n  rootFolderId: 0,\n  emailNotification: true,\n  email: \"\",\n  defaultVisibility: \"public\",\n  defaultBucketpool: 2,\n  agents: {\n    mime: false,\n    monk: false,\n    ojo: false,\n    bucket: false,\n    copyright_email_author: false,\n    ecc: false,\n    keyword: false,\n    nomos: false,\n    package: false,\n    reso: false,\n    heritage: false,\n  },\n};\n\nexport const bucketPool = [\n  {\n    id: 0,\n    name: \"GPL Demo bucket pool, v1\",\n    disabled: false,\n  },\n];\n\nexport const agents = {\n  bucket: \"Bucket Analysis\",\n  copyright_email_author: \"Copyright/Email/URL/Author Analysis\",\n  ecc: \"ECC Analysis, scanning for text fragments potentially relevant for export control\",\n  keyword: \"Keyword Analysis\",\n  mime: \"MIME-type Analysis (Determine mimetype of every file. Not needed for licenses or buckets)\",\n  monk: \"Monk License Analysis, scanning for licenses performing a text comparison\",\n  nomos:\n    \"Nomos License Analysis, scanning for licenses using regular expressions\",\n  ojo: \"Ojo License Analysis, scanning for licenses using SPDX-License-Identifier\",\n  package: \"Package Analysis (Parse package headers)\",\n  reso: \"REUSE.Software Analysis (forces *Ojo License Analysis*)\",\n  heritage: \"Software Heritage Analysis\",\n};\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n Copyright (C) 2022 Samuel Dushimimana (dushsam100@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport {\n  getAllGroupsApi,\n  createGroupApi,\n  deleteGroupApi,\n  getAllDeletableGroupsApi,\n} from \"api/groups\";\nimport { setLocalStorage, getLocalStorage } from \"shared/storageHelper\";\n\n// Fetching all the groups\nexport const getAllGroups = () => {\n  return getLocalStorage(\"groups\");\n};\n\nexport const fetchAllGroups = () => {\n  return getAllGroupsApi().then((res) => {\n    setLocalStorage(\"groups\", res);\n    return res;\n  });\n};\n\n// Creating a group\nexport const createGroup = (name) => {\n  return createGroupApi(name).then((res) => {\n    return res;\n  });\n};\n\n// Delete a group\nexport const deleteGroup = (id) => {\n  return deleteGroupApi(id).then((res) => {\n    return res;\n  });\n};\n\n// Fetching all deletable groups\nexport const fetchAllDeletableGroups = () => {\n  return getAllDeletableGroupsApi().then((res) => {\n    return res;\n  });\n};\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport endpoints from \"constants/endpoints\";\n\n// Getting Authorization Token\nimport { getToken } from \"shared/authHelper\";\n\n// Function for calling the fetch function for the APIs\nimport sendRequest from \"./sendRequest\";\n\n// Fetching all the groups\nexport const getAllGroupsApi = () => {\n  const url = endpoints.admin.groups.getAll();\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n    addGroupName: false,\n  });\n};\n\n// Fetching all deletable groups\nexport const getAllDeletableGroupsApi = () => {\n  const url = endpoints.admin.groups.getAllDeletable();\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n    addGroupName: false,\n  });\n};\n\n// Creating a group\nexport const createGroupApi = (name) => {\n  const url = endpoints.admin.groups.create();\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      Authorization: getToken(),\n      name,\n    },\n    addGroupName: false,\n  });\n};\n\n// Delete a group\nexport const deleteGroupApi = (id) => {\n  const url = endpoints.admin.groups.delete(id);\n  return sendRequest({\n    url,\n    method: \"DELETE\",\n    headers: {\n      Authorization: getToken(),\n    },\n    addGroupName: false,\n  });\n};\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n Copyright (C) 2022 Krishna Mahato (krishhtrishh9304@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport {\n  getJobApi,\n  scheduleAnalysisApi,\n  scheduleReportApi,\n  downloadReportApi,\n  getAllJobApi,\n  getAllAdminJobApi,\n  importReportApi,\n} from \"api/jobs\";\nimport { getReportIdFromUrl } from \"shared/helper\";\nimport { getLocalStorage } from \"shared/storageHelper\";\n\n// Fetching the jobs\nexport const getJob = (jobId) => {\n  return getJobApi(jobId).then((res) => {\n    return res.entity.map((jsonObject) => {\n      const tag = {};\n      tag.stats = { score: jsonObject.score };\n      return tag;\n    });\n  });\n};\n\n// Fetching all jobs\nexport const getAllJob = (jobsDatalist) => {\n  return getAllJobApi(jobsDatalist).then((res) => {\n    return {\n      res,\n      pages: getLocalStorage(\"pages\"),\n    };\n  });\n};\n\n// Fetching all jobs for the Admin\nexport const getAllAdminJob = (jobsDatalist) => {\n  return getAllAdminJobApi(jobsDatalist).then((res) => {\n    return {\n      res,\n      pages: getLocalStorage(\"pages\"),\n    };\n  });\n};\n\n// Scheduling the analysis for the uploads\nexport const scheduleAnalysis = (folderId, uploadId, scanData) => {\n  return scheduleAnalysisApi(folderId, uploadId, scanData).then((res) => {\n    return res;\n  });\n};\n\nexport const scheduleReport = (uploadId, reportFormat) => {\n  return scheduleReportApi(uploadId, reportFormat).then((res) => {\n    return res;\n  });\n};\n\nexport const downloadReport = (url) => {\n  const reportId = getReportIdFromUrl(url);\n  if (reportId === null) {\n    return null;\n  }\n  return downloadReportApi(reportId).then((res) => {\n    return res;\n  });\n};\n\nexport const importReport = (uploadId, reqBody) => {\n  return importReportApi(uploadId, reqBody).then((res) => {\n    return res;\n  });\n};\n\nexport default getJob;\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport endpoints from \"constants/endpoints\";\n\n// Getting Authorization Token\nimport { getToken } from \"shared/authHelper\";\n\n// Function for calling the fetch function for the APIs\nimport sendRequest from \"./sendRequest\";\n\nexport const getAllJobApi = ({ page, limit }) => {\n  const url = endpoints.jobs.scheduleAnalysis();\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n      page,\n      limit,\n    },\n  });\n};\n\n// Fetch all the jobs for admin\nexport const getAllAdminJobApi = ({ page, limit }) => {\n  const url = endpoints.jobs.allJobs();\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n      page,\n      limit,\n    },\n  });\n};\n\n// Fetching the jobs\nexport const getJobApi = ({ jobId }) => {\n  const url = endpoints.jobs.details(jobId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n  });\n};\n\n// Scheduling the analysis for the uploads\nexport const scheduleAnalysisApi = (folderId, uploadId, scanData) => {\n  const url = endpoints.jobs.scheduleAnalysis();\n  const { bucket, copyrightEmailAuthor, ecc, keyword, mime, monk, nomos, ojo } =\n    scanData?.analysis;\n  const { nomosMonk, bulkReused, newScanner, ojoDecider } = scanData?.decider;\n  const {\n    reuseUpload,\n    reuseGroup,\n    reuseMain,\n    reuseEnhanced,\n    reuseReport,\n    reuseCopyright,\n  } = scanData?.reuse;\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      Authorization: getToken(),\n      folderId,\n      uploadId,\n    },\n    body: {\n      analysis: {\n        bucket,\n        copyright_email_author: copyrightEmailAuthor,\n        ecc,\n        keyword,\n        mime,\n        monk,\n        nomos,\n        ojo,\n        package: scanData.analysis.package,\n      },\n      decider: {\n        nomos_monk: nomosMonk,\n        bulk_reused: bulkReused,\n        new_scanner: newScanner,\n        ojo_decider: ojoDecider,\n      },\n      reuse: {\n        reuse_upload: reuseUpload,\n        reuse_group: reuseGroup,\n        reuse_main: reuseMain,\n        reuse_enhanced: reuseEnhanced,\n        reuse_report: reuseReport,\n        reuse_copyright: reuseCopyright,\n      },\n    },\n  });\n};\n\nexport const scheduleReportApi = (uploadId, reportFormat) => {\n  const url = endpoints.jobs.scheduleReport();\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n      uploadId,\n      reportFormat,\n    },\n  });\n};\n\nexport const downloadReportApi = (reportId) => {\n  const url = endpoints.jobs.downloadReport(reportId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n    isFile: true,\n  });\n};\n\nexport const importReportApi = (uploadId, reqBody) => {\n  const url = endpoints.jobs.importReport(uploadId);\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      Authorization: getToken(),\n    },\n    isMultipart: true,\n    body: reqBody,\n  });\n};\n\nexport default getJobApi;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\nfunction IgnoreScm({ ignoreScm, handleChange }) {\n  return (\n    <div id=\"upload-ignore-files\" className=\"mt-4\">\n      <InputContainer\n        type=\"checkbox\"\n        checked={ignoreScm}\n        name=\"ignoreScm\"\n        id=\"upload-ignore-scm\"\n        onChange={(e) => handleChange(e)}\n      >\n        Ignore SCM files (Git, SVN, TFS) and files with particular\n        Mimetype&nbsp;\n        <Tooltip title=\"Configure mimetypes from Admin-Customize-Skip MimeTypes from scanning\" />\n      </InputContainer>\n    </div>\n  );\n}\n\nIgnoreScm.propTypes = {\n  ignoreScm: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default IgnoreScm;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\nfunction AccessLevel({ accessLevel, handleChange }) {\n  return (\n    <div id=\"upload-access-level\">\n      <InputContainer\n        type=\"radio\"\n        value=\"private\"\n        name=\"accessLevel\"\n        id=\"upload-access-level-private\"\n        checked={accessLevel === \"private\"}\n        onChange={(e) => handleChange(e)}\n      >\n        Visible only for active group&nbsp;\n        <Tooltip title=\"which is the currently selected group\" />\n      </InputContainer>\n      <InputContainer\n        type=\"radio\"\n        value=\"protected\"\n        name=\"accessLevel\"\n        id=\"upload-access-level-protected\"\n        checked={accessLevel === \"protected\"}\n        onChange={(e) => handleChange(e)}\n      >\n        Visible for all groups&nbsp;\n        <Tooltip title=\"which are accessible by you now\" />\n      </InputContainer>\n      <InputContainer\n        type=\"radio\"\n        value=\"public\"\n        name=\"accessLevel\"\n        id=\"upload-access-level-public\"\n        checked={accessLevel === \"public\"}\n        onChange={(e) => handleChange(e)}\n      >\n        Make Public&nbsp;\n        <Tooltip title=\"visible for all users\" />\n      </InputContainer>\n    </div>\n  );\n}\n\nAccessLevel.propTypes = {\n  accessLevel: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default AccessLevel;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport InputContainer from \"components/Widgets/Input\";\n\nfunction OptionalAnalysis({ analysis, handleChange }) {\n  return (\n    <div id=\"uplod-optional-analysis\" className=\"mt-4\">\n      <p className=\"font-demi\">Select optional analysis</p>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.bucket}\n        name=\"bucket\"\n        id=\"upload-analysis-bucket\"\n        onChange={(e) => handleChange(e)}\n      >\n        Bucket Analysis\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.copyrightEmailAuthor}\n        name=\"copyrightEmailAuthor\"\n        id=\"upload-analysis-copyright-email-author\"\n        onChange={(e) => handleChange(e)}\n      >\n        Copyright/Email/URL/Author Analysis\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.ecc}\n        name=\"ecc\"\n        id=\"upload-analysis-ecc\"\n        onChange={(e) => handleChange(e)}\n      >\n        ECC Analysis, scanning for text fragments potentially relevant for\n        export control\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.keyword}\n        name=\"keyword\"\n        id=\"upload-analysis-keyword\"\n        onChange={(e) => handleChange(e)}\n      >\n        Keyword Analysis\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.mime}\n        name=\"mime\"\n        id=\"upload-analysis-mime\"\n        onChange={(e) => handleChange(e)}\n      >\n        MIME-type Analysis (Determine mimetype of every file. Not needed for\n        licenses or buckets)\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.monk}\n        name=\"monk\"\n        id=\"upload-analysis-monk\"\n        onChange={(e) => handleChange(e)}\n      >\n        Monk License Analysis, scanning for licenses performing a text\n        comparison\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.nomos}\n        name=\"nomos\"\n        id=\"upload-analysis-nomos\"\n        onChange={(e) => handleChange(e)}\n      >\n        Nomos License Analysis, scanning for licenses using regular expressions\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.ojo}\n        name=\"ojo\"\n        id=\"upload-analysis-ojo\"\n        onChange={(e) => handleChange(e)}\n      >\n        Ojo License Analysis, scanning for licenses using\n        SPDX-License-Identifier\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.package}\n        name=\"package\"\n        id=\"upload-analysis-package\"\n        onChange={(e) => handleChange(e)}\n      >\n        Package Analysis (Parse package headers)\n      </InputContainer>\n    </div>\n  );\n}\n\nOptionalAnalysis.propTypes = {\n  analysis: PropTypes.shape({\n    bucket: PropTypes.bool.isRequired,\n    copyrightEmailAuthor: PropTypes.bool.isRequired,\n    ecc: PropTypes.bool.isRequired,\n    keyword: PropTypes.bool.isRequired,\n    mime: PropTypes.bool.isRequired,\n    monk: PropTypes.bool.isRequired,\n    nomos: PropTypes.bool.isRequired,\n    ojo: PropTypes.bool.isRequired,\n    package: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default OptionalAnalysis;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\nfunction LicenseDecider({ decider, handleChange }) {\n  return (\n    <div id=\"upload-concluded-license-decider\" className=\"mt-4\">\n      <p className=\"font-demi\">\n        Automatic Concluded License Decider,\n        <Tooltip title=\"only for relevant files\" /> based on\n      </p>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.nomosMonk}\n        name=\"nomosMonk\"\n        id=\"upload-decider-nomos-monk\"\n        onChange={(e) => handleChange(e)}\n      >\n        ... scanners matches if all Nomos findings are within the Monk findings\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.ojoDecider}\n        name=\"ojoDecider\"\n        id=\"upload-decider-ojo-decider\"\n        onChange={(e) => handleChange(e)}\n      >\n        .. scanners matches if Ojo findings are no contradiction with other\n        findings\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.bulkReused}\n        name=\"bulkReused\"\n        id=\"upload-decider-bulk-reused\"\n        onChange={(e) => handleChange(e)}\n      >\n        ... bulk phrases from reused packages\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.newScanner}\n        name=\"newScanner\"\n        id=\"upload-decider-new-scanner\"\n        onChange={(e) => handleChange(e)}\n      >\n        ... new scanner results, i.e., decisions were marked as work in progress\n        if new scanner finds additional licenses\n      </InputContainer>\n    </div>\n  );\n}\n\nLicenseDecider.propTypes = {\n  decider: PropTypes.shape({\n    nomosMonk: PropTypes.bool.isRequired,\n    bulkReused: PropTypes.bool.isRequired,\n    newScanner: PropTypes.bool.isRequired,\n    ojoDecider: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default LicenseDecider;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\n// Required services for calling APIs\nimport { getAllFolders } from \"services/folders\";\nimport { getUploadsFolderId } from \"services/organizeUploads\";\nimport { getAllGroups } from \"services/groups\";\n\nimport messages from \"constants/messages\";\n\nconst UploadReuse = ({ reuse, handleChange }) => {\n  const initialGroupList = [{ id: 3, name: \"fossy\" }];\n  const initialFolderList = [\n    {\n      id: 1,\n      name: \"Software Repository\",\n      description: \"Top Folder\",\n      parent: null,\n    },\n  ];\n  const initialUploadList = [\n    {\n      folderId: 1,\n      uploadId: null,\n      uploadName: \"\",\n      uploadDescription: \"\",\n    },\n  ];\n  const [reuseData, setReuseData] = useState({\n    groupList: initialGroupList,\n    folderList: initialFolderList,\n    uploadList: initialUploadList,\n    reuseFolder: 1,\n  });\n\n  useEffect(() => {\n    setReuseData((prevData) => ({ ...prevData, groupList: getAllGroups() }));\n  }, []);\n\n  useEffect(() => {\n    getAllFolders(reuse.reuseGroup)\n      .then((res) => {\n        setReuseData((prevData) => ({ ...prevData, folderList: res }));\n      })\n      .catch(() => {});\n  }, [reuse.reuseGroup]);\n\n  useEffect(() => {\n    getUploadsFolderId(reuseData.reuseFolder, reuse.reuseGroup)\n      .then((res) => {\n        setReuseData((prevData) => ({ ...prevData, uploadList: res }));\n      })\n      .catch(() => {});\n  }, [reuse.reuseGroup, reuseData.reuseFolder]);\n\n  const handleReuseDataChange = (e) => {\n    setReuseData((prevData) => ({\n      ...prevData,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  return (\n    <div id=\"upload-reuse\" className=\"mt-4\">\n      <p className=\"font-demi\">\n        (Optional) Reuse\n        <Tooltip title=\"copy clearing decisions if there is the same file hash between two files\" />\n      </p>\n      <InputContainer\n        type=\"select\"\n        name=\"reuseGroup\"\n        id=\"upload-file-reuse-group\"\n        onChange={handleChange}\n        options={reuseData.groupList}\n        value={reuse.reuseGroup}\n        property=\"name\"\n        valueProperty=\"name\"\n        noDataMessage={messages.noGroup}\n      >\n        Select the reuse group:\n      </InputContainer>\n      <InputContainer\n        type=\"select\"\n        name=\"reuseFolder\"\n        id=\"upload-file-reuse-folder\"\n        onChange={handleReuseDataChange}\n        options={reuseData.folderList}\n        value={reuseData.reuseFolder}\n        property=\"name\"\n        noDataMessage={messages.noFolder}\n      >\n        Select the reuse folder:\n      </InputContainer>\n      <InputContainer\n        type=\"select\"\n        name=\"reuseUpload\"\n        id=\"upload-file-reuse-upload\"\n        onChange={handleChange}\n        options={reuseData.uploadList}\n        value={parseInt(reuse.reuseUpload, 10)}\n        property=\"uploadname\"\n        valueProperty=\"id\"\n        noDataMessage={messages.noUploads}\n      >\n        Select the reuse upload:\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseEnhanced}\n        name=\"reuseEnhanced\"\n        id=\"upload-file-reuse-enhanced\"\n        onChange={handleChange}\n      >\n        Enhanced reuse (slower)\n        <Tooltip title=\"will copy a clearing decision if the two files differ by one line determined by a diff tool\" />\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseMain}\n        name=\"reuseMain\"\n        id=\"upload-file-reuse-main\"\n        onChange={handleChange}\n      >\n        Reuse main license/s\n        <Tooltip title=\"will copy a main license decision if any\" />\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseReport}\n        name=\"reuseReport\"\n        id=\"upload-file-reuse-report\"\n        onChange={handleChange}\n      >\n        Reuse report configuration settings\n        <Tooltip title=\"use to copy all the information from conf page(if any)\" />\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseCopyright}\n        name=\"reuseCopyright\"\n        id=\"upload-file-reuse-copyright\"\n        onChange={handleChange}\n      >\n        Reuse edited and deactivated copyrights\n        <Tooltip title=\"use to copy edited and deactivated copyrights from the reused package\" />\n      </InputContainer>\n    </div>\n  );\n};\n\nUploadReuse.propTypes = {\n  reuse: PropTypes.shape({\n    reuseUpload: PropTypes.number.isRequired,\n    reuseGroup: PropTypes.string.isRequired,\n    reuseMain: PropTypes.bool.isRequired,\n    reuseEnhanced: PropTypes.bool.isRequired,\n    reuseReport: PropTypes.bool.isRequired,\n    reuseCopyright: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default UploadReuse;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport IgnoreScm from \"./IgnoreScm\";\nimport AccessLevel from \"./AccessLevel\";\nimport OptionalAnalysis from \"./OptionalAnalysis\";\nimport LicenseDecider from \"./LicenseDecider\";\nimport UploadReuse from \"./UploadReuse\";\n\nfunction CommonFields({\n  accessLevel,\n  ignoreScm,\n  analysis,\n  decider,\n  reuse,\n  handleChange,\n  handleScanChange,\n}) {\n  return (\n    <>\n      {ignoreScm && (\n        <IgnoreScm ignoreScm={ignoreScm} handleChange={handleChange} />\n      )}\n      {accessLevel && (\n        <AccessLevel accessLevel={accessLevel} handleChange={handleChange} />\n      )}\n      {analysis && (\n        <OptionalAnalysis analysis={analysis} handleChange={handleScanChange} />\n      )}\n      {decider && (\n        <LicenseDecider decider={decider} handleChange={handleScanChange} />\n      )}\n      {reuse && <UploadReuse reuse={reuse} handleChange={handleScanChange} />}\n    </>\n  );\n}\n\nCommonFields.propTypes = {\n  accessLevel: PropTypes.string,\n  ignoreScm: PropTypes.bool,\n  analysis: PropTypes.shape({\n    bucket: PropTypes.bool.isRequired,\n    copyrightEmailAuthor: PropTypes.bool.isRequired,\n    ecc: PropTypes.bool.isRequired,\n    keyword: PropTypes.bool.isRequired,\n    mime: PropTypes.bool.isRequired,\n    monk: PropTypes.bool.isRequired,\n    nomos: PropTypes.bool.isRequired,\n    ojo: PropTypes.bool.isRequired,\n    package: PropTypes.bool.isRequired,\n  }),\n  decider: PropTypes.shape({\n    nomosMonk: PropTypes.bool.isRequired,\n    bulkReused: PropTypes.bool.isRequired,\n    newScanner: PropTypes.bool.isRequired,\n    ojoDecider: PropTypes.bool.isRequired,\n  }),\n  reuse: PropTypes.shape({\n    reuseUpload: PropTypes.number.isRequired,\n    reuseGroup: PropTypes.string.isRequired,\n    reuseMain: PropTypes.bool.isRequired,\n    reuseEnhanced: PropTypes.bool.isRequired,\n    reuseReport: PropTypes.bool.isRequired,\n    reuseCopyright: PropTypes.bool.isRequired,\n  }),\n  handleChange: PropTypes.func,\n  handleScanChange: PropTypes.func,\n};\n\nexport default CommonFields;\n"],"sourceRoot":""}