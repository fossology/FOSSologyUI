{"version":3,"sources":["pages/Organize/Uploads/Edit/index.jsx","shared/helper.js","api/upload.js","services/upload.js"],"names":["UploadEdit","useState","folderId","uploadId","uploadName","uploadDescription","editUploadFolderData","setEditUploadFolderData","id","name","description","parent","folderList","setFolderList","uploadFolderList","setUploadFolderList","showMessage","setShowMessage","type","text","message","setMessage","handleChange","e","target","value","useEffect","getAllFolders","then","res","catch","error","handleError","getUploadsFolderId","getUploadById","uploadname","title","className","setShow","onChange","options","property","onClick","preventDefault","randomString","length","result","characters","charactersLength","i","charAt","Math","floor","random","getDate","day","Date","prototype","addDays","days","currentDate","this","valueOf","setDate","toISOString","split","getNameInitials","nameList","substring","toUpperCase","map","n","index","join","window","scrollTo","top","getReportIdFromUrl","url","matches","match","getFileNameFromContentDispostionHeader","header","contentDispostion","fileName","trim","createUploadApi","accessLevel","ignoreScm","fileInput","endpoints","upload","uploadCreate","formdata","FormData","append","sendRequest","method","isMultipart","headers","Authorization","getToken","public","uploadType","body","propTypes","PropTypes","number","string","bool","createUploadFile","createUploadVcs","createUploadVcsApi","createUploadUrl","createUploadUrlApi","retries","getId","getUploadByIdApi","getUploadSummary","getSummary","getUploadSummaryApi","getUploadLicense","agent","getLicense","queryParams","getUploadLicenseApi"],"mappings":"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","file":"static/js/52.8cb34c7a.chunk.js","sourcesContent":["/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React, { useState, useEffect } from \"react\";\n\n// Title\nimport Title from \"components/Title\";\n\n// Widgets\nimport { Alert, Button, InputContainer } from \"components/Widgets\";\n\n// Required functions for calling APIs\nimport { getAllFolders } from \"services/folders\";\nimport { getUploadsFolderId } from \"services/organizeUploads\";\nimport { getUploadById } from \"services/upload\";\n\n// Helper function for error handling\nimport { handleError } from \"shared/helper\";\n\nconst UploadEdit = () => {\n  const initialState = {\n    folderId: 1,\n    uploadId: null,\n    uploadName: \"\",\n    uploadDescription: \"\",\n  };\n  const initialFolderList = [\n    {\n      id: 1,\n      name: \"Software Repository\",\n      description: \"Top Folder\",\n      parent: null,\n    },\n  ];\n  const initialMessage = {\n    type: \"success\",\n    text: \"\",\n  };\n\n  // Data required for editing the upload\n  const [editUploadFolderData, setEditUploadFolderData] =\n    useState(initialState);\n\n  // Setting the list for all the folders names\n  const [folderList, setFolderList] = useState(initialFolderList);\n\n  // Setting the list for all the uploads of respective folders\n  const [uploadFolderList, setUploadFolderList] = useState([]);\n\n  // State Variables for handling Error Boundaries\n  const [showMessage, setShowMessage] = useState(false);\n  const [message, setMessage] = useState(initialMessage);\n\n  const handleChange = (e) => {\n    setEditUploadFolderData({\n      ...editUploadFolderData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    getAllFolders()\n      .then((res) => {\n        setFolderList(res);\n      })\n      .catch((error) => {\n        handleError(error, setMessage);\n        setShowMessage(true);\n      });\n    getUploadsFolderId(editUploadFolderData.folderId)\n      .then((res) => {\n        setUploadFolderList(res);\n      })\n      .catch((error) => {\n        handleError(error, setMessage);\n        setShowMessage(true);\n      });\n    if (editUploadFolderData.uploadId) {\n      getUploadById(editUploadFolderData.uploadId)\n        .then((res) =>\n          setEditUploadFolderData({\n            ...editUploadFolderData,\n            uploadName: res.uploadname,\n            uploadDescription: res.description,\n          })\n        )\n        .catch((error) => {\n          handleError(error, setMessage);\n          setShowMessage(true);\n        });\n    }\n  }, [editUploadFolderData.folderId, editUploadFolderData.uploadId]);\n\n  return (\n    <>\n      <Title title=\"Edit Uploads\" />\n      <div className=\"main-container my-3\">\n        {showMessage && (\n          <Alert\n            type={message.type}\n            setShow={setShowMessage}\n            message={message.text}\n          />\n        )}\n        <h1 className=\"font-size-main-heading mb-4\">\n          Edit Uploaded File Properties\n        </h1>\n        <div className=\"row\">\n          <div className=\"col-lg-8 col-md-12 col-sm-12 col-12\">\n            <ul>\n              <li>\n                <InputContainer\n                  type=\"select\"\n                  name=\"folderId\"\n                  id=\"organize-upload-folder-list\"\n                  onChange={(e) => handleChange(e)}\n                  options={folderList}\n                  property=\"name\"\n                  value={folderList?.id}\n                >\n                  Select the folder that contains the upload:\n                </InputContainer>\n              </li>\n              <li className=\"mt-4\">\n                <InputContainer\n                  type=\"select\"\n                  name=\"uploadId\"\n                  id=\"organize-upload-list\"\n                  onChange={(e) => handleChange(e)}\n                  options={uploadFolderList}\n                  property=\"uploadname\"\n                >\n                  Select the upload you wish to edit:\n                </InputContainer>\n              </li>\n              <li className=\"mt-4\">\n                <InputContainer\n                  type=\"text\"\n                  name=\"uploadName\"\n                  id=\"organize-upload-name\"\n                  onChange={(e) => handleChange(e)}\n                  value={editUploadFolderData.uploadName}\n                >\n                  Upload name:\n                </InputContainer>\n              </li>\n              <li className=\"mt-4\">\n                <InputContainer\n                  type=\"text\"\n                  name=\"uploadDescription\"\n                  id=\"organize-upload-description\"\n                  onChange={(e) => handleChange(e)}\n                  value={editUploadFolderData.uploadDescription}\n                >\n                  Upload Description:\n                </InputContainer>\n              </li>\n            </ul>\n            <Button type=\"submit\" onClick={handleSubmit} className=\"mt-4\">\n              Edit\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UploadEdit;\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\n// Random string generator\nexport const randomString = (length) => {\n  let result = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\n// Get date in YYYY-MM-DD format\nexport const getDate = (day) => {\n  // eslint-disable-next-line no-extend-native, func-names\n  Date.prototype.addDays = function (days) {\n    const currentDate = new Date(this.valueOf());\n    currentDate.setDate(currentDate.getDate() + days);\n    return currentDate;\n  };\n  const date = new Date();\n  return date.addDays(day).toISOString().split(\"T\")[0];\n};\n\n// Returns the initials of given name\nexport const getNameInitials = (name) => {\n  if (!name) {\n    return name;\n  }\n  // Convert name into array of words\n  const nameList = name.split(\" \");\n  // For single word name return first 2 characters\n  if (nameList.length === 1) {\n    return nameList[0].substring(0, 2).toUpperCase();\n  }\n  // Return the first 3 characters of the initials\n  return nameList\n    .map((n, index) => {\n      if (index < 3) {\n        return n[0];\n      }\n      return null;\n    })\n    .join(\"\")\n    .toUpperCase();\n};\n\n// Common handle error component\nexport const handleError = (error, setMessage) => {\n  window.scrollTo({ top: 0 });\n  setMessage({\n    type: \"danger\",\n    text: error.message,\n  });\n};\n\n// Extract report id from url\nexport const getReportIdFromUrl = (url) => {\n  const matches = url.match(/report\\/([0-9]+)/);\n  if (matches != null) {\n    return matches[1];\n  }\n  return null;\n};\n\nexport const getFileNameFromContentDispostionHeader = (header) => {\n  const contentDispostion = header.split(\";\");\n  let fileName = \"download.txt\";\n  // eslint-disable-next-line no-restricted-syntax\n  for (const headerElement of contentDispostion) {\n    const matches = headerElement.trim().match(/filename=\"(.*)\"/);\n    if (matches != null) {\n      fileName = matches[1];\n      break;\n    }\n  }\n\n  return fileName;\n};\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport PropTypes from \"prop-types\";\nimport endpoints from \"constants/endpoints\";\n\n// Getting Authorization Token\nimport { getToken } from \"shared/authHelper\";\n\n// Function for calling the fetch function for the APIs\nimport sendRequest from \"./sendRequest\";\n\n// Create Uploads from File\nexport const createUploadApi = (\n  folderId,\n  uploadDescription,\n  accessLevel,\n  ignoreScm,\n  fileInput\n) => {\n  const url = endpoints.upload.uploadCreate();\n  const formdata = new FormData();\n  if (fileInput) {\n    formdata.append(\"fileInput\", fileInput, fileInput?.name);\n  }\n  return sendRequest({\n    url,\n    method: \"POST\",\n    isMultipart: true,\n    headers: {\n      Authorization: getToken(),\n      folderId,\n      uploadDescription,\n      public: accessLevel,\n      ignoreScm,\n      uploadType: \"\",\n    },\n    body: formdata,\n  });\n};\n\n// Create Uploads from Version Control System\nexport const createUploadVcsApi = (header, body) => {\n  const url = endpoints.upload.uploadCreate();\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      ...header,\n      Authorization: getToken(),\n    },\n    body,\n  });\n};\n\n// Create Uploads from URL\nexport const createUploadUrlApi = (header, body) => {\n  const url = endpoints.upload.uploadCreate();\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      ...header,\n      Authorization: getToken(),\n    },\n    body,\n  });\n};\n\n// Getting a Upload by id\nexport const getUploadByIdApi = (uploadId, retries) => {\n  const url = endpoints.upload.getId(uploadId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n    retries,\n    headers: {\n      Authorization: getToken(),\n    },\n  });\n};\n\n// Getting a Upload Summary\nexport const getUploadSummaryApi = (uploadId) => {\n  const url = endpoints.upload.getSummary(uploadId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n  });\n};\n\n// Getting a Upload License\nexport const getUploadLicenseApi = (uploadId, agent) => {\n  const url = endpoints.upload.getLicense(uploadId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n    queryParams: {\n      agent,\n    },\n  });\n};\n\ncreateUploadApi.propTypes = {\n  folderId: PropTypes.number,\n  uploadDescription: PropTypes.string,\n  accessLevel: PropTypes.string,\n  ignoreScm: PropTypes.bool,\n  fileInput: PropTypes.string,\n};\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n SPDX-License-Identifier: GPL-2.0\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport {\n  createUploadApi,\n  getUploadByIdApi,\n  createUploadVcsApi,\n  createUploadUrlApi,\n  getUploadSummaryApi,\n  getUploadLicenseApi,\n} from \"api/upload\";\n\n// Create Uploads from File\nexport const createUploadFile = ({\n  folderId,\n  uploadDescription,\n  accessLevel,\n  ignoreScm,\n  fileInput,\n}) => {\n  return createUploadApi(\n    folderId,\n    uploadDescription,\n    accessLevel,\n    ignoreScm,\n    fileInput\n  ).then((res) => {\n    return res;\n  });\n};\n\n// Create Uploads from Version Control System\nexport const createUploadVcs = (header, body) => {\n  return createUploadVcsApi(header, body).then((res) => {\n    return res;\n  });\n};\n\n// Create Uploads from URL\nexport const createUploadUrl = (header, body) => {\n  return createUploadUrlApi(header, body).then((res) => {\n    return res;\n  });\n};\n\n// Getting a Upload by id\nexport const getUploadById = (uploadId, retries) => {\n  return getUploadByIdApi(uploadId, retries).then((res) => {\n    return res;\n  });\n};\n\n// Getting a Upload Summary\nexport const getUploadSummary = (uploadId) => {\n  return getUploadSummaryApi(uploadId).then((res) => {\n    return res;\n  });\n};\n\n// Getting a Upload License\nexport const getUploadLicense = (uploadId, agent) => {\n  return getUploadLicenseApi(uploadId, agent).then((res) => {\n    return res;\n  });\n};\n"],"sourceRoot":""}