{"version":3,"sources":["api/upload.js","services/upload.js","pages/Organize/Uploads/Edit/index.jsx","shared/helper.js"],"names":["createUploadApi","folderId","uploadDescription","accessLevel","ignoreScm","fileInput","url","endpoints","upload","uploadCreate","formdata","FormData","append","name","sendRequest","method","isMultipart","headers","Authorization","getToken","public","uploadType","body","propTypes","PropTypes","number","string","bool","createUploadFile","then","res","createUploadVcs","header","createUploadVcsApi","createUploadUrl","createUploadUrlApi","getUploadById","uploadId","retries","getId","getUploadByIdApi","getUploadSummary","getSummary","getUploadSummaryApi","getUploadLicense","agent","getLicense","queryParams","getUploadLicenseApi","UploadEdit","useState","uploadName","editUploadFolderData","setEditUploadFolderData","id","description","parent","folderList","setFolderList","uploadFolderList","setUploadFolderList","showMessage","setShowMessage","type","text","message","setMessage","handleChange","e","target","value","useEffect","getAllFolders","catch","error","handleError","getUploadsFolderId","uploadname","title","className","setShow","onChange","options","property","onClick","preventDefault","randomString","length","result","characters","charactersLength","i","charAt","Math","floor","random","getDate","day","Date","prototype","addDays","days","currentDate","this","valueOf","setDate","toISOString","split","getNameInitials","nameList","substring","toUpperCase","map","n","index","join","window","scrollTo","top","getReportIdFromUrl","matches","match","getFileNameFromContentDispostionHeader","contentDispostion","fileName","trim"],"mappings":"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","file":"static/js/60.b876d6e0.chunk.js","sourcesContent":["/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport PropTypes from \"prop-types\";\nimport endpoints from \"constants/endpoints\";\n\n// Getting Authorization Token\nimport { getToken } from \"shared/authHelper\";\n\n// Function for calling the fetch function for the APIs\nimport sendRequest from \"./sendRequest\";\n\n// Create Uploads from File\nexport const createUploadApi = (\n  folderId,\n  uploadDescription,\n  accessLevel,\n  ignoreScm,\n  fileInput\n) => {\n  const url = endpoints.upload.uploadCreate();\n  const formdata = new FormData();\n  if (fileInput) {\n    formdata.append(\"fileInput\", fileInput, fileInput?.name);\n  }\n  return sendRequest({\n    url,\n    method: \"POST\",\n    isMultipart: true,\n    headers: {\n      Authorization: getToken(),\n      folderId,\n      uploadDescription,\n      public: accessLevel,\n      ignoreScm,\n      uploadType: \"\",\n    },\n    body: formdata,\n  });\n};\n\n// Create Uploads from Version Control System\nexport const createUploadVcsApi = (header, body) => {\n  const url = endpoints.upload.uploadCreate();\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      ...header,\n      Authorization: getToken(),\n    },\n    body,\n  });\n};\n\n// Create Uploads from URL\nexport const createUploadUrlApi = (header, body) => {\n  const url = endpoints.upload.uploadCreate();\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      ...header,\n      Authorization: getToken(),\n    },\n    body,\n  });\n};\n\n// Getting a Upload by id\nexport const getUploadByIdApi = (uploadId, retries) => {\n  const url = endpoints.upload.getId(uploadId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n    retries,\n    headers: {\n      Authorization: getToken(),\n    },\n  });\n};\n\n// Getting a Upload Summary\nexport const getUploadSummaryApi = (uploadId) => {\n  const url = endpoints.upload.getSummary(uploadId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n  });\n};\n\n// Getting a Upload License\nexport const getUploadLicenseApi = (uploadId, agent) => {\n  const url = endpoints.upload.getLicense(uploadId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n    queryParams: {\n      agent,\n    },\n  });\n};\n\ncreateUploadApi.propTypes = {\n  folderId: PropTypes.number,\n  uploadDescription: PropTypes.string,\n  accessLevel: PropTypes.string,\n  ignoreScm: PropTypes.bool,\n  fileInput: PropTypes.string,\n};\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n SPDX-License-Identifier: GPL-2.0\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport {\n  createUploadApi,\n  getUploadByIdApi,\n  createUploadVcsApi,\n  createUploadUrlApi,\n  getUploadSummaryApi,\n  getUploadLicenseApi,\n} from \"api/upload\";\n\n// Create Uploads from File\nexport const createUploadFile = ({\n  folderId,\n  uploadDescription,\n  accessLevel,\n  ignoreScm,\n  fileInput,\n}) => {\n  return createUploadApi(\n    folderId,\n    uploadDescription,\n    accessLevel,\n    ignoreScm,\n    fileInput\n  ).then((res) => {\n    return res;\n  });\n};\n\n// Create Uploads from Version Control System\nexport const createUploadVcs = (header, body) => {\n  return createUploadVcsApi(header, body).then((res) => {\n    return res;\n  });\n};\n\n// Create Uploads from URL\nexport const createUploadUrl = (header, body) => {\n  return createUploadUrlApi(header, body).then((res) => {\n    return res;\n  });\n};\n\n// Getting a Upload by id\nexport const getUploadById = (uploadId, retries) => {\n  return getUploadByIdApi(uploadId, retries).then((res) => {\n    return res;\n  });\n};\n\n// Getting a Upload Summary\nexport const getUploadSummary = (uploadId) => {\n  return getUploadSummaryApi(uploadId).then((res) => {\n    return res;\n  });\n};\n\n// Getting a Upload License\nexport const getUploadLicense = (uploadId, agent) => {\n  return getUploadLicenseApi(uploadId, agent).then((res) => {\n    return res;\n  });\n};\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React, { useState, useEffect } from \"react\";\n\n// Title\nimport Title from \"components/Title\";\n\n// Widgets\nimport { Alert, Button, InputContainer } from \"components/Widgets\";\n\n// Required functions for calling APIs\nimport { getAllFolders } from \"services/folders\";\nimport { getUploadsFolderId } from \"services/organizeUploads\";\nimport { getUploadById } from \"services/upload\";\n\n// Helper function for error handling\nimport { handleError } from \"shared/helper\";\n\nconst UploadEdit = () => {\n  const initialState = {\n    folderId: 1,\n    uploadId: null,\n    uploadName: \"\",\n    uploadDescription: \"\",\n  };\n  const initialFolderList = [\n    {\n      id: 1,\n      name: \"Software Repository\",\n      description: \"Top Folder\",\n      parent: null,\n    },\n  ];\n  const initialMessage = {\n    type: \"success\",\n    text: \"\",\n  };\n\n  // Data required for editing the upload\n  const [editUploadFolderData, setEditUploadFolderData] =\n    useState(initialState);\n\n  // Setting the list for all the folders names\n  const [folderList, setFolderList] = useState(initialFolderList);\n\n  // Setting the list for all the uploads of respective folders\n  const [uploadFolderList, setUploadFolderList] = useState([]);\n\n  // State Variables for handling Error Boundaries\n  const [showMessage, setShowMessage] = useState(false);\n  const [message, setMessage] = useState(initialMessage);\n\n  const handleChange = (e) => {\n    setEditUploadFolderData({\n      ...editUploadFolderData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    getAllFolders()\n      .then((res) => {\n        setFolderList(res);\n      })\n      .catch((error) => {\n        handleError(error, setMessage);\n        setShowMessage(true);\n      });\n    getUploadsFolderId(editUploadFolderData.folderId)\n      .then((res) => {\n        setUploadFolderList(res);\n      })\n      .catch((error) => {\n        handleError(error, setMessage);\n        setShowMessage(true);\n      });\n    if (editUploadFolderData.uploadId) {\n      getUploadById(editUploadFolderData.uploadId)\n        .then((res) =>\n          setEditUploadFolderData({\n            ...editUploadFolderData,\n            uploadName: res.uploadname,\n            uploadDescription: res.description,\n          })\n        )\n        .catch((error) => {\n          handleError(error, setMessage);\n          setShowMessage(true);\n        });\n    }\n  }, [editUploadFolderData.folderId, editUploadFolderData.uploadId]);\n\n  return (\n    <>\n      <Title title=\"Edit Uploads\" />\n      <div className=\"main-container my-3\">\n        {showMessage && (\n          <Alert\n            type={message.type}\n            setShow={setShowMessage}\n            message={message.text}\n          />\n        )}\n        <h1 className=\"font-size-main-heading mb-4\">\n          Edit Uploaded File Properties\n        </h1>\n        <div className=\"row\">\n          <div className=\"col-lg-8 col-md-12 col-sm-12 col-12\">\n            <ul>\n              <li>\n                <InputContainer\n                  type=\"select\"\n                  name=\"folderId\"\n                  id=\"organize-upload-folder-list\"\n                  onChange={(e) => handleChange(e)}\n                  options={folderList}\n                  property=\"name\"\n                  value={folderList?.id}\n                >\n                  Select the folder that contains the upload:\n                </InputContainer>\n              </li>\n              <li className=\"mt-4\">\n                <InputContainer\n                  type=\"select\"\n                  name=\"uploadId\"\n                  id=\"organize-upload-list\"\n                  onChange={(e) => handleChange(e)}\n                  options={uploadFolderList}\n                  property=\"uploadname\"\n                >\n                  Select the upload you wish to edit:\n                </InputContainer>\n              </li>\n              <li className=\"mt-4\">\n                <InputContainer\n                  type=\"text\"\n                  name=\"uploadName\"\n                  id=\"organize-upload-name\"\n                  onChange={(e) => handleChange(e)}\n                  value={editUploadFolderData.uploadName}\n                >\n                  Upload name:\n                </InputContainer>\n              </li>\n              <li className=\"mt-4\">\n                <InputContainer\n                  type=\"text\"\n                  name=\"uploadDescription\"\n                  id=\"organize-upload-description\"\n                  onChange={(e) => handleChange(e)}\n                  value={editUploadFolderData.uploadDescription}\n                >\n                  Upload Description:\n                </InputContainer>\n              </li>\n            </ul>\n            <Button type=\"submit\" onClick={handleSubmit} className=\"mt-4\">\n              Edit\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UploadEdit;\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\n// Random string generator\nexport const randomString = (length) => {\n  let result = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\n// Get date in YYYY-MM-DD format\nexport const getDate = (day) => {\n  // eslint-disable-next-line no-extend-native, func-names\n  Date.prototype.addDays = function (days) {\n    const currentDate = new Date(this.valueOf());\n    currentDate.setDate(currentDate.getDate() + days);\n    return currentDate;\n  };\n  const date = new Date();\n  return date.addDays(day).toISOString().split(\"T\")[0];\n};\n\n// Returns the initials of given name\nexport const getNameInitials = (name) => {\n  if (!name) {\n    return name;\n  }\n  // Convert name into array of words\n  const nameList = name.split(\" \");\n  // For single word name return first 2 characters\n  if (nameList.length === 1) {\n    return nameList[0].substring(0, 2).toUpperCase();\n  }\n  // Return the first 3 characters of the initials\n  return nameList\n    .map((n, index) => {\n      if (index < 3) {\n        return n[0];\n      }\n      return null;\n    })\n    .join(\"\")\n    .toUpperCase();\n};\n\n// Common handle error component\nexport const handleError = (error, setMessage) => {\n  window.scrollTo({ top: 0 });\n  setMessage({\n    type: \"danger\",\n    text: error.message,\n  });\n};\n\n// Extract report id from url\nexport const getReportIdFromUrl = (url) => {\n  const matches = url.match(/report\\/([0-9]+)/);\n  if (matches != null) {\n    return matches[1];\n  }\n  return null;\n};\n\nexport const getFileNameFromContentDispostionHeader = (header) => {\n  const contentDispostion = header.split(\";\");\n  let fileName = \"download.txt\";\n  // eslint-disable-next-line no-restricted-syntax\n  for (const headerElement of contentDispostion) {\n    const matches = headerElement.trim().match(/filename=\"(.*)\"/);\n    if (matches != null) {\n      fileName = matches[1];\n      break;\n    }\n  }\n\n  return fileName;\n};\n"],"sourceRoot":""}