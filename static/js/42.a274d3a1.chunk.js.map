{"version":3,"sources":["pages/Upload/Vcs/index.jsx","shared/helper.js","constants/constants.js","services/groups.js","api/groups.js","components/Upload/CommonFields/IgnoreScm/index.jsx","components/Upload/CommonFields/AccessLevel/index.jsx","components/Upload/CommonFields/OptionalAnalysis/index.jsx","components/Upload/CommonFields/LicenseDecider/index.jsx","components/Upload/CommonFields/UploadReuse/index.jsx","components/Upload/CommonFields/index.jsx","services/jobs.js","api/jobs.js","api/upload.js","services/upload.js"],"names":["UploadFromVcs","uploadId","useState","initialStateVcs","uploadVcsData","setUploadVcsData","initialFolderList","folderList","setFolderList","initialScanFileData","scanFileData","setScanFileData","initialVcsData","vcsData","setVcsData","message","setMessage","loading","setLoading","showMessage","setShowMessage","handleChange","e","target","type","name","checked","files","value","handleVcsChange","useEffect","getAllFolders","then","res","catch","error","handleError","title","className","text","setShow","id","onChange","options","property","typeVcs","vcsUrl","vcsBranch","vcsUsername","vcsPassword","vcsName","htmlFor","uploadDescription","rows","accessLevel","ignoreScm","analysis","decider","reuse","handleScanChange","Object","keys","find","parseInt","onClick","preventDefault","createUploadVcs","window","scrollTo","top","messages","queuedUpload","getUploadById","setTimeout","scheduleAnalysis","folderId","scheduledAnalysis","finally","as","animation","size","role","randomString","length","result","characters","charactersLength","i","charAt","Math","floor","random","getDate","day","Date","prototype","addDays","days","currentDate","this","valueOf","setDate","toISOString","split","getNameInitials","nameList","substring","toUpperCase","map","n","index","join","getReportIdFromUrl","url","matches","match","getFileNameFromContentDispostionHeader","header","contentDispostion","fileName","trim","statusOptions","assignOptions","actionsOptions","reportFormat","disabled","initialMessage","initialState","searchType","filename","tag","filesizemin","filesizemax","license","copyright","page","limit","initialMessageSearch","initialStateFile","fileInput","initialScanFileDataFile","defaultAgentsList","nomosMonk","bulkReused","newScanner","ojoDecider","reuseUpload","reuseGroup","getLocalStorage","default_group","reuseMain","reuseEnhanced","reuseReport","reuseCopyright","initialFolderListFile","description","parent","initialStateImportReport","folder","editUpload","reportUpload","newLicense","licenseInfoInFile","licenseConcluded","licenseDecision","existingDecisions","importDiscussed","initialStateUploadFromServer","uploadType","groupName","initialStateUrl","initialUrlData","vcsType","entriesOptions","entry","initialMantainanceFields","allNonSlow","allOperations","validateFolderContents","rmvGoldFiles","rmvOrphanedRows","rmvLogFiles","normalizePriority","rmvUploads","rmvTokens","rmvTempTables","analyseDb","rmvRepoFiles","dbReindexing","verbose","rmvRepoOldFiles1","rmvRepoOldFiles2","accessLevels","initialAddUserData","user_pass","rootFolderId","emailNotification","email","defaultVisibility","defaultBucketpool","agents","mime","monk","ojo","bucket","copyright_email_author","ecc","keyword","nomos","package","reso","heritage","bucketPool","getAllGroups","fetchAllGroups","endpoints","admin","groups","getAll","sendRequest","method","headers","Authorization","getToken","addGroupName","getAllGroupsApi","setLocalStorage","createGroup","create","createGroupApi","IgnoreScm","AccessLevel","OptionalAnalysis","Input","copyrightEmailAuthor","LicenseDecider","UploadReuse","groupList","uploadList","uploadName","reuseFolder","reuseData","setReuseData","prevData","getUploadsFolderId","valueProperty","noDataMessage","noGroup","noFolder","noUploads","CommonFields","getAllJob","jobsDatalist","jobs","getAllJobApi","pages","scanData","body","nomos_monk","bulk_reused","new_scanner","ojo_decider","reuse_upload","reuse_group","reuse_main","reuse_enhanced","reuse_report","reuse_copyright","scheduleAnalysisApi","scheduleReport","scheduleReportApi","downloadReport","reportId","isFile","downloadReportApi","createUploadApi","upload","uploadCreate","formdata","FormData","append","isMultipart","public","propTypes","PropTypes","number","string","bool","createUploadFile","createUploadVcsApi","createUploadUrl","createUploadUrlApi","retries","getId","getUploadByIdApi","getUploadSummary","getSummary","getUploadSummaryApi","getUploadLicense","agent","getLicense","queryParams","getUploadLicenseApi"],"mappings":"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","file":"static/js/42.a274d3a1.chunk.js","sourcesContent":["/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React, { useState, useEffect } from \"react\";\nimport messages from \"constants/messages\";\n\n// Title\nimport Title from \"components/Title\";\n\n// Widgets\nimport { Alert, Button, InputContainer, Spinner } from \"components/Widgets\";\n\n// Common Fields for all the Uploads\nimport CommonFields from \"components/Upload/CommonFields\";\n\n// Required functions for calling APIs\nimport { getAllFolders } from \"services/folders\";\nimport { createUploadVcs, getUploadById } from \"services/upload\";\nimport { scheduleAnalysis } from \"services/jobs\";\n\n// Default Agents list\nimport {\n  initialScanFileData,\n  initialFolderList,\n  initialStateVcs,\n  initialVcsData,\n  typeVcs,\n} from \"constants/constants\";\n\n// Helper function for error handling\nimport { handleError } from \"shared/helper\";\n\nconst UploadFromVcs = () => {\n  // Upload Id required for scheduling Analysis\n  let uploadId;\n\n  // Data required for creating the upload\n  const [uploadVcsData, setUploadVcsData] = useState(initialStateVcs);\n\n  // Setting the list for all the folders names\n  const [folderList, setFolderList] = useState(initialFolderList);\n\n  // Setting the data for scheduling analysis of an uploads\n  const [scanFileData, setScanFileData] = useState(initialScanFileData);\n\n  // Data required for creating the upload from Version Control System\n  const [vcsData, setVcsData] = useState(initialVcsData);\n\n  // State Variables for handling Error Boundaries\n  const [message, setMessage] = useState();\n  const [loading, setLoading] = useState(false);\n  const [showMessage, setShowMessage] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    createUploadVcs(uploadVcsData, vcsData)\n      .then((res) => {\n        window.scrollTo({ top: 0 });\n        setMessage({\n          type: \"success\",\n          text: `${messages.queuedUpload} #${res.message}`,\n        });\n        uploadId = res.message;\n      })\n      // Calling the api for maximum 10 times to check whether the upload is unpacked by the agent\n      .then(() => getUploadById(uploadId, 10))\n      .then(() =>\n        setTimeout(\n          () =>\n            scheduleAnalysis(uploadVcsData.folderId, uploadId, scanFileData)\n              .then(() => {\n                window.scrollTo({ top: 0 });\n                setMessage({\n                  type: \"success\",\n                  text: messages.scheduledAnalysis,\n                });\n                setUploadVcsData(initialStateVcs);\n                setScanFileData(initialScanFileData);\n              })\n              .catch((error) => {\n                handleError(error, setMessage);\n              }),\n          200000\n        )\n      )\n      .catch((error) => {\n        handleError(error, setMessage);\n      })\n      .finally(() => {\n        setLoading(false);\n        setShowMessage(true);\n      });\n  };\n  const handleChange = (e) => {\n    if (e.target.type === \"checkbox\") {\n      setUploadVcsData({\n        ...uploadVcsData,\n        [e.target.name]: e.target.checked,\n      });\n    } else if (e.target.type === \"file\") {\n      setUploadVcsData({\n        ...uploadVcsData,\n        [e.target.name]: e.target.files[0],\n      });\n    } else {\n      setUploadVcsData({\n        ...uploadVcsData,\n        [e.target.name]: e.target.value,\n      });\n    }\n  };\n  const handleScanChange = (e) => {\n    const { name } = e.target;\n    if (\n      Object.keys(scanFileData.analysis).find((analysis) => analysis === name)\n    ) {\n      setScanFileData({\n        ...scanFileData,\n        analysis: {\n          ...scanFileData.analysis,\n          [e.target.name]: e.target.checked,\n        },\n      });\n    } else if (\n      Object.keys(scanFileData.decider).find((decider) => decider === name)\n    ) {\n      setScanFileData({\n        ...scanFileData,\n        decider: {\n          ...scanFileData.decider,\n          [e.target.name]: e.target.checked,\n        },\n      });\n    } else {\n      setScanFileData({\n        ...scanFileData,\n        reuse: {\n          ...scanFileData.reuse,\n          [e.target.name]:\n            e.target.type === \"checkbox\"\n              ? e.target.checked\n              : parseInt(e.target.value, 10) || e.target.value,\n        },\n      });\n    }\n  };\n  const handleVcsChange = (e) => {\n    setVcsData({\n      ...vcsData,\n      [e.target.name]: e.target.value,\n    });\n  };\n  useEffect(() => {\n    getAllFolders()\n      .then((res) => {\n        setFolderList(res);\n      })\n      .catch((error) => {\n        handleError(error, setMessage);\n        setShowMessage(true);\n      });\n  }, []);\n  return (\n    <>\n      <Title title=\"Upload from Version Control System\" />\n      <div className=\"main-container my-3\">\n        {showMessage && (\n          <Alert\n            type={message.type}\n            message={message.text}\n            setShow={setShowMessage}\n          />\n        )}\n        <div className=\"row\">\n          <div className=\"col-lg-8 col-md-12 col-sm-12 col-12\">\n            <h3 className=\"font-size-main-heading\">\n              Upload From Version Control System\n            </h3>\n            <p className=\"font-demi my-3\">\n              To manage your own group permissions go into Admin &gt; Groups\n              &gt; Manage Group Users. To manage permissions for this one\n              upload, go to Admin &gt; Upload Permissions.\n            </p>\n            <p>\n              You can upload source code from a version control system; one risk\n              is that FOSSology will store your username/password of a\n              repository to database, also run checkout source code from command\n              line with username and password explicitly.\n            </p>\n            <form className=\"my-3\">\n              <InputContainer\n                type=\"select\"\n                name=\"folderId\"\n                id=\"upload-folder-id\"\n                onChange={(e) => handleChange(e)}\n                options={folderList}\n                property=\"name\"\n                value={folderList?.id}\n              >\n                Select the folder for storing the uploaded files:\n              </InputContainer>\n              <InputContainer\n                type=\"select\"\n                name=\"vcsType\"\n                id=\"upload-vcs-type\"\n                onChange={(e) => handleVcsChange(e)}\n                options={typeVcs}\n                property=\"type\"\n              >\n                Select the type of version control system:\n              </InputContainer>\n              <InputContainer\n                type=\"text\"\n                name=\"vcsUrl\"\n                id=\"upload-vcs-url-repo\"\n                onChange={(e) => handleVcsChange(e)}\n                value={vcsData.vcsUrl}\n              >\n                Enter the URL of the repo:\n              </InputContainer>\n              <div className=\"font-size-small\">\n                Note: The URL can begin with HTTP://, HTTPS:// . When do git\n                upload, if https url fails, please try http URL.\n              </div>\n              <InputContainer\n                type=\"text\"\n                name=\"vcsBranch\"\n                id=\"upload-vcs-branch\"\n                onChange={(e) => handleVcsChange(e)}\n                value={vcsData.vcsBranch}\n              >\n                (Optional for Git) Branch name:\n              </InputContainer>\n              <InputContainer\n                type=\"text\"\n                name=\"vcsUsername\"\n                id=\"upload-vcs-username\"\n                onChange={(e) => handleVcsChange(e)}\n                value={vcsData.vcsUsername}\n              >\n                (Optional) Username:\n              </InputContainer>\n              <InputContainer\n                type=\"text\"\n                name=\"vcsPassword\"\n                id=\"upload-vcs-branch\"\n                onChange={(e) => handleVcsChange(e)}\n                value={vcsData.vcsPassword}\n              >\n                (Optional) Password:\n              </InputContainer>\n              <InputContainer\n                type=\"text\"\n                name=\"vcsName\"\n                id=\"upload-vcs-name\"\n                onChange={(e) => handleVcsChange(e)}\n                value={vcsData.vcsName}\n              >\n                (Optional) Enter a viewable name for this file (directory):\n              </InputContainer>\n              <div className=\"font-size-small\">\n                Note: If no name is provided, then the uploaded file (directory)\n                name will be used.\n              </div>\n              <div className=\"my-2\">\n                <label htmlFor=\"upload\" className=\"font-demi w-100\">\n                  (Optional) Enter a description of this file:\n                  <textarea\n                    name=\"uploadDescription\"\n                    className=\"form-control font-regular mt-2\"\n                    value={uploadVcsData.uploadDescription}\n                    id=\"upload-file-description\"\n                    rows=\"3\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                </label>\n              </div>\n              <CommonFields\n                accessLevel={uploadVcsData.accessLevel}\n                ignoreScm={uploadVcsData.ignoreScm}\n                analysis={scanFileData.analysis}\n                decider={scanFileData.decider}\n                reuse={scanFileData.reuse}\n                handleChange={handleChange}\n                handleScanChange={handleScanChange}\n              />\n              <Button type=\"submit\" onClick={handleSubmit} className=\"mt-4\">\n                {loading ? (\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                ) : (\n                  \"Upload\"\n                )}\n              </Button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UploadFromVcs;\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\n// Random string generator\nexport const randomString = (length) => {\n  let result = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\n// Get date in YYYY-MM-DD format\nexport const getDate = (day) => {\n  // eslint-disable-next-line no-extend-native, func-names\n  Date.prototype.addDays = function (days) {\n    const currentDate = new Date(this.valueOf());\n    currentDate.setDate(currentDate.getDate() + days);\n    return currentDate;\n  };\n  const date = new Date();\n  return date.addDays(day).toISOString().split(\"T\")[0];\n};\n\n// Returns the initials of given name\nexport const getNameInitials = (name) => {\n  if (!name) {\n    return name;\n  }\n  // Convert name into array of words\n  const nameList = name.split(\" \");\n  // For single word name return first 2 characters\n  if (nameList.length === 1) {\n    return nameList[0].substring(0, 2).toUpperCase();\n  }\n  // Return the first 3 characters of the initials\n  return nameList\n    .map((n, index) => {\n      if (index < 3) {\n        return n[0];\n      }\n      return null;\n    })\n    .join(\"\")\n    .toUpperCase();\n};\n\n// Common handle error component\nexport const handleError = (error, setMessage) => {\n  window.scrollTo({ top: 0 });\n  setMessage({\n    type: \"danger\",\n    text: error.message,\n  });\n};\n\n// Extract report id from url\nexport const getReportIdFromUrl = (url) => {\n  const matches = url.match(/report\\/([0-9]+)/);\n  if (matches != null) {\n    return matches[1];\n  }\n  return null;\n};\n\nexport const getFileNameFromContentDispostionHeader = (header) => {\n  const contentDispostion = header.split(\";\");\n  let fileName = \"download.txt\";\n  // eslint-disable-next-line no-restricted-syntax\n  for (const headerElement of contentDispostion) {\n    const matches = headerElement.trim().match(/filename=\"(.*)\"/);\n    if (matches != null) {\n      fileName = matches[1];\n      break;\n    }\n  }\n\n  return fileName;\n};\n","/*\n Copyright (C) 2022 Soham Banerjee(sohambanerjee4abc@hotmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\n// constants used in Browse component\nimport { defaultAgentsList, getLocalStorage } from \"shared/storageHelper\";\n\nexport const statusOptions = [\n  {\n    id: 0,\n    name: \"open\",\n  },\n  {\n    id: 1,\n    name: \"in progress\",\n  },\n  {\n    id: 2,\n    name: \"closed\",\n  },\n  {\n    id: 3,\n    name: \"rejected\",\n  },\n];\n\nexport const assignOptions = [\n  {\n    id: 0,\n    name: \"me\",\n  },\n  {\n    id: 1,\n    name: \"unassigned\",\n  },\n];\nexport const actionsOptions = [\n  {\n    id: 0,\n    name: \"-- select action --\",\n    reportFormat: \"0\",\n    disabled: true,\n  },\n  {\n    id: 1,\n    name: \"Export DEP5\",\n    reportFormat: \"dep5\",\n  },\n  {\n    id: 2,\n    name: \"Export ReadMe_OSS\",\n    reportFormat: \"readmeoss\",\n  },\n  {\n    id: 3,\n    name: \"Export SPDX RDF\",\n    reportFormat: \"spdx2\",\n  },\n  {\n    id: 4,\n    name: \"Export SPDX tag:value\",\n    reportFormat: \"spdx2tv\",\n  },\n  {\n    id: 5,\n    name: \"Export Unified Report\",\n    reportFormat: \"unifiedreport\",\n  },\n];\nexport const initialMessage = {\n  type: \"success\",\n  text: \"\",\n};\n\nexport const initialState = {\n  searchType: \"allfiles\",\n  uploadId: \"\",\n  filename: \"\",\n  tag: \"\",\n  filesizemin: \"\",\n  filesizemax: \"\",\n  license: \"\",\n  copyright: \"\",\n  page: 1,\n  limit: 10,\n};\n// constants used in the Search component\nexport const initialMessageSearch = {\n  type: \"danger\",\n  text: \"\",\n};\n\n// constants used in Upload/file component\nexport const initialStateFile = {\n  folderId: 1,\n  uploadDescription: \"\",\n  accessLevel: \"protected\",\n  ignoreScm: false,\n  fileInput: null,\n};\nexport const initialScanFileDataFile = {\n  analysis: defaultAgentsList(),\n  decider: {\n    nomosMonk: false,\n    bulkReused: false,\n    newScanner: false,\n    ojoDecider: false,\n  },\n  reuse: {\n    reuseUpload: 0,\n    reuseGroup: getLocalStorage(\"user\")?.default_group,\n    reuseMain: false,\n    reuseEnhanced: false,\n    reuseReport: false,\n    reuseCopyright: false,\n  },\n};\nexport const initialFolderListFile = [\n  {\n    id: 1,\n    name: \"Software Repository\",\n    description: \"Top Folder\",\n    parent: null,\n  },\n];\n// constants for upload/ImportReport\nexport const initialStateImportReport = {\n  folder: \"\",\n  editUpload: \"\",\n  reportUpload: \"\",\n  newLicense: \"licenseCanditate\",\n  licenseInfoInFile: true,\n  licenseConcluded: false,\n  licenseDecision: true,\n  existingDecisions: true,\n  importDiscussed: true,\n  copyright: false,\n};\n\n// constants for upload/UploadFromServer\nexport const initialStateUploadFromServer = {\n  folderId: 1,\n  uploadDescription: \"\",\n  accessLevel: \"protected\",\n  ignoreScm: false,\n  uploadType: \"server\",\n  groupName: \"\",\n};\n\n// constants for upload/url\nexport const initialStateUrl = {\n  folderId: 1,\n  uploadDescription: \"\",\n  accessLevel: \"protected\",\n  ignoreScm: false,\n  uploadType: \"url\",\n};\n\nexport const initialUrlData = {\n  url: \"\",\n  name: \"\",\n};\n\n// constants from upload/vcs\nexport const initialStateVcs = {\n  folderId: 1,\n  uploadDescription: \"\",\n  accessLevel: \"protected\",\n  ignoreScm: false,\n  uploadType: \"vcs\",\n};\n\nexport const initialVcsData = {\n  vcsType: \"git\",\n  vcsUrl: \"\",\n  vcsBranch: \"\",\n  vcsName: \"\",\n  vcsUsername: \"\",\n  vcsPassword: \"\",\n};\nexport const typeVcs = [\n  { id: \"git\", type: \"Git\" },\n  { id: \"svn\", type: \"SVN\" },\n];\n\n// common & reused\nexport const entriesOptions = [\n  {\n    id: 10,\n    entry: \"10\",\n  },\n  {\n    id: 25,\n    entry: \"25\",\n  },\n  {\n    id: 50,\n    entry: \"50\",\n  },\n  {\n    id: 100,\n    entry: \"100\",\n  },\n];\nexport const initialScanFileData = {\n  analysis: defaultAgentsList(),\n  decider: {\n    nomosMonk: false,\n    bulkReused: false,\n    newScanner: false,\n    ojoDecider: false,\n  },\n  reuse: {\n    reuseUpload: 0,\n    reuseGroup: getLocalStorage(\"user\")?.default_group,\n    reuseMain: false,\n    reuseEnhanced: false,\n    reuseReport: false,\n    reuseCopyright: false,\n  },\n};\nexport const initialFolderList = [\n  {\n    id: 1,\n    name: \"Software Repository\",\n    description: \"Top Folder\",\n    parent: null,\n  },\n];\n\nexport const initialMantainanceFields = {\n  allNonSlow: false,\n  allOperations: false,\n  validateFolderContents: false,\n  rmvGoldFiles: false,\n  rmvOrphanedRows: false,\n  rmvLogFiles: false,\n  normalizePriority: false,\n  rmvUploads: false,\n  rmvTokens: false,\n  rmvTempTables: false,\n  analyseDb: false,\n  rmvRepoFiles: false,\n  dbReindexing: false,\n  verbose: false,\n  rmvRepoOldFiles1: false,\n  rmvRepoOldFiles2: false,\n};\nexport const accessLevels = [\n  {\n    id: 0,\n    name: \"None (very basic, no database access)\",\n    disabled: false,\n    value: \"none\",\n  },\n  {\n    id: 1,\n    name: \"Read-only (read, but no writes or downloads)\",\n    disabled: false,\n    value: \"read_only\",\n  },\n  {\n    id: 2,\n    name: \"Read-Write (read, download, or edit information)\",\n    disabled: false,\n    value: \"read_write\",\n  },\n  {\n    id: 3,\n    name: \"Clearing Administrator (read, download, edit information and edit decisions)\",\n    disabled: false,\n    value: \"clearing_admin\",\n  },\n  {\n    id: 4,\n    name: \"Full Administrator (all access including adding and deleting users)\",\n    disabled: false,\n    value: \"admin\",\n  },\n];\n\nexport const initialAddUserData = {\n  name: \"\",\n  user_pass: \"\",\n  description: \"\",\n  accessLevel: \"\",\n  rootFolderId: 0,\n  emailNotification: true,\n  email: \"\",\n  defaultVisibility: \"public\",\n  defaultBucketpool: 2,\n  agents: {\n    mime: false,\n    monk: false,\n    ojo: false,\n    bucket: false,\n    copyright_email_author: false,\n    ecc: false,\n    keyword: false,\n    nomos: false,\n    package: false,\n    reso: false,\n    heritage: false,\n  },\n};\n\nexport const bucketPool = [\n  {\n    id: 0,\n    name: \"GPL Demo bucket pool, v1\",\n    disabled: false,\n  },\n];\n\nexport const agents = {\n  bucket: \"Bucket Analysis\",\n  copyright_email_author: \"Copyright/Email/URL/Author Analysis\",\n  ecc: \"ECC Analysis, scanning for text fragments potentially relevant for export control\",\n  keyword: \"Keyword Analysis\",\n  mime: \"MIME-type Analysis (Determine mimetype of every file. Not needed for licenses or buckets)\",\n  monk: \"Monk License Analysis, scanning for licenses performing a text comparison\",\n  nomos:\n    \"Nomos License Analysis, scanning for licenses using regular expressions\",\n  ojo: \"Ojo License Analysis, scanning for licenses using SPDX-License-Identifier\",\n  package: \"Package Analysis (Parse package headers)\",\n  reso: \"REUSE.Software Analysis (forces *Ojo License Analysis*)\",\n  heritage: \"Software Heritage Analysis\",\n};\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport { getAllGroupsApi, createGroupApi } from \"api/groups\";\nimport { setLocalStorage, getLocalStorage } from \"shared/storageHelper\";\n\n// Fetching all the groups\nexport const getAllGroups = () => {\n  return getLocalStorage(\"groups\");\n};\n\nexport const fetchAllGroups = () => {\n  return getAllGroupsApi().then((res) => {\n    setLocalStorage(\"groups\", res);\n    return res;\n  });\n};\n\n// Creating a group\nexport const createGroup = (name) => {\n  return createGroupApi(name).then((res) => {\n    return res;\n  });\n};\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport endpoints from \"constants/endpoints\";\n\n// Getting Authorization Token\nimport { getToken } from \"shared/authHelper\";\n\n// Function for calling the fetch function for the APIs\nimport sendRequest from \"./sendRequest\";\n\n// Fetching all the groups\nexport const getAllGroupsApi = () => {\n  const url = endpoints.admin.groups.getAll();\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n    addGroupName: false,\n  });\n};\n\n// Creating a group\nexport const createGroupApi = (name) => {\n  const url = endpoints.admin.groups.create();\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      Authorization: getToken(),\n      name,\n    },\n    addGroupName: false,\n  });\n};\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\nfunction IgnoreScm({ ignoreScm, handleChange }) {\n  return (\n    <div id=\"upload-ignore-files\" className=\"mt-4\">\n      <InputContainer\n        type=\"checkbox\"\n        checked={ignoreScm}\n        name=\"ignoreScm\"\n        id=\"upload-ignore-scm\"\n        onChange={(e) => handleChange(e)}\n      >\n        Ignore SCM files (Git, SVN, TFS) and files with particular\n        Mimetype&nbsp;\n        <Tooltip title=\"Configure mimetypes from Admin-Customize-Skip MimeTypes from scanning\" />\n      </InputContainer>\n    </div>\n  );\n}\n\nIgnoreScm.propTypes = {\n  ignoreScm: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default IgnoreScm;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\nfunction AccessLevel({ accessLevel, handleChange }) {\n  return (\n    <div id=\"upload-access-level\" className=\"mt-1\">\n      <InputContainer\n        type=\"radio\"\n        value=\"private\"\n        name=\"accessLevel\"\n        id=\"upload-access-level-private\"\n        checked={accessLevel === \"private\"}\n        onChange={(e) => handleChange(e)}\n      >\n        Visible only for active group&nbsp;\n        <Tooltip title=\"which is the currently selected group\" />\n      </InputContainer>\n      <InputContainer\n        type=\"radio\"\n        value=\"protected\"\n        name=\"accessLevel\"\n        id=\"upload-access-level-protected\"\n        checked={accessLevel === \"protected\"}\n        onChange={(e) => handleChange(e)}\n      >\n        Visible for all groups&nbsp;\n        <Tooltip title=\"which are accessible by you now\" />\n      </InputContainer>\n      <InputContainer\n        type=\"radio\"\n        value=\"public\"\n        name=\"accessLevel\"\n        id=\"upload-access-level-public\"\n        checked={accessLevel === \"public\"}\n        onChange={(e) => handleChange(e)}\n      >\n        Make Public&nbsp;\n        <Tooltip title=\"visible for all users\" />\n      </InputContainer>\n    </div>\n  );\n}\n\nAccessLevel.propTypes = {\n  accessLevel: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default AccessLevel;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport InputContainer from \"components/Widgets/Input\";\n\nfunction OptionalAnalysis({ analysis, handleChange }) {\n  return (\n    <div id=\"uplod-optional-analysis\" className=\"mt-4\">\n      <p className=\"font-demi\">Select optional analysis</p>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.bucket}\n        name=\"bucket\"\n        id=\"upload-analysis-bucket\"\n        onChange={(e) => handleChange(e)}\n      >\n        Bucket Analysis\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.copyrightEmailAuthor}\n        name=\"copyrightEmailAuthor\"\n        id=\"upload-analysis-copyright-email-author\"\n        onChange={(e) => handleChange(e)}\n      >\n        Copyright/Email/URL/Author Analysis\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.ecc}\n        name=\"ecc\"\n        id=\"upload-analysis-ecc\"\n        onChange={(e) => handleChange(e)}\n      >\n        ECC Analysis, scanning for text fragments potentially relevant for\n        export control\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.keyword}\n        name=\"keyword\"\n        id=\"upload-analysis-keyword\"\n        onChange={(e) => handleChange(e)}\n      >\n        Keyword Analysis\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.mime}\n        name=\"mime\"\n        id=\"upload-analysis-mime\"\n        onChange={(e) => handleChange(e)}\n      >\n        MIME-type Analysis (Determine mimetype of every file. Not needed for\n        licenses or buckets)\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.monk}\n        name=\"monk\"\n        id=\"upload-analysis-monk\"\n        onChange={(e) => handleChange(e)}\n      >\n        Monk License Analysis, scanning for licenses performing a text\n        comparison\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.nomos}\n        name=\"nomos\"\n        id=\"upload-analysis-nomos\"\n        onChange={(e) => handleChange(e)}\n      >\n        Nomos License Analysis, scanning for licenses using regular expressions\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.ojo}\n        name=\"ojo\"\n        id=\"upload-analysis-ojo\"\n        onChange={(e) => handleChange(e)}\n      >\n        Ojo License Analysis, scanning for licenses using\n        SPDX-License-Identifier\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.package}\n        name=\"package\"\n        id=\"upload-analysis-package\"\n        onChange={(e) => handleChange(e)}\n      >\n        Package Analysis (Parse package headers)\n      </InputContainer>\n    </div>\n  );\n}\n\nOptionalAnalysis.propTypes = {\n  analysis: PropTypes.shape({\n    bucket: PropTypes.bool.isRequired,\n    copyrightEmailAuthor: PropTypes.bool.isRequired,\n    ecc: PropTypes.bool.isRequired,\n    keyword: PropTypes.bool.isRequired,\n    mime: PropTypes.bool.isRequired,\n    monk: PropTypes.bool.isRequired,\n    nomos: PropTypes.bool.isRequired,\n    ojo: PropTypes.bool.isRequired,\n    package: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default OptionalAnalysis;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\nfunction LicenseDecider({ decider, handleChange }) {\n  return (\n    <div id=\"upload-concluded-license-decider\" className=\"mt-4\">\n      <p className=\"font-demi\">\n        Automatic Concluded License Decider,\n        <Tooltip title=\"only for relevant files\" /> based on\n      </p>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.nomosMonk}\n        name=\"nomosMonk\"\n        id=\"upload-decider-nomos-monk\"\n        onChange={(e) => handleChange(e)}\n      >\n        ... scanners matches if all Nomos findings are within the Monk findings\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.ojoDecider}\n        name=\"ojoDecider\"\n        id=\"upload-decider-ojo-decider\"\n        onChange={(e) => handleChange(e)}\n      >\n        .. scanners matches if Ojo findings are no contradiction with other\n        findings\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.bulkReused}\n        name=\"bulkReused\"\n        id=\"upload-decider-bulk-reused\"\n        onChange={(e) => handleChange(e)}\n      >\n        ... bulk phrases from reused packages\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.newScanner}\n        name=\"newScanner\"\n        id=\"upload-decider-new-scanner\"\n        onChange={(e) => handleChange(e)}\n      >\n        ... new scanner results, i.e., decisions were marked as work in progress\n        if new scanner finds additional licenses\n      </InputContainer>\n    </div>\n  );\n}\n\nLicenseDecider.propTypes = {\n  decider: PropTypes.shape({\n    nomosMonk: PropTypes.bool.isRequired,\n    bulkReused: PropTypes.bool.isRequired,\n    newScanner: PropTypes.bool.isRequired,\n    ojoDecider: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default LicenseDecider;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\n// Required services for calling APIs\nimport { getAllFolders } from \"services/folders\";\nimport { getUploadsFolderId } from \"services/organizeUploads\";\nimport { getAllGroups } from \"services/groups\";\n\nimport messages from \"constants/messages\";\n\nconst UploadReuse = ({ reuse, handleChange }) => {\n  const initialGroupList = [{ id: 3, name: \"fossy\" }];\n  const initialFolderList = [\n    {\n      id: 1,\n      name: \"Software Repository\",\n      description: \"Top Folder\",\n      parent: null,\n    },\n  ];\n  const initialUploadList = [\n    {\n      folderId: 1,\n      uploadId: null,\n      uploadName: \"\",\n      uploadDescription: \"\",\n    },\n  ];\n  const [reuseData, setReuseData] = useState({\n    groupList: initialGroupList,\n    folderList: initialFolderList,\n    uploadList: initialUploadList,\n    reuseFolder: 1,\n  });\n\n  useEffect(() => {\n    setReuseData((prevData) => ({ ...prevData, groupList: getAllGroups() }));\n  }, []);\n\n  useEffect(() => {\n    getAllFolders(reuse.reuseGroup)\n      .then((res) => {\n        setReuseData((prevData) => ({ ...prevData, folderList: res }));\n      })\n      .catch(() => {});\n  }, [reuse.reuseGroup]);\n\n  useEffect(() => {\n    getUploadsFolderId(reuseData.reuseFolder, reuse.reuseGroup)\n      .then((res) => {\n        setReuseData((prevData) => ({ ...prevData, uploadList: res }));\n      })\n      .catch(() => {});\n  }, [reuse.reuseGroup, reuseData.reuseFolder]);\n\n  const handleReuseDataChange = (e) => {\n    setReuseData((prevData) => ({\n      ...prevData,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  return (\n    <div id=\"upload-reuse\" className=\"mt-4\">\n      <p className=\"font-demi\">\n        (Optional) Reuse\n        <Tooltip title=\"copy clearing decisions if there is the same file hash between two files\" />\n      </p>\n      <InputContainer\n        type=\"select\"\n        name=\"reuseGroup\"\n        id=\"upload-file-reuse-group\"\n        onChange={handleChange}\n        options={reuseData.groupList}\n        value={reuse.reuseGroup}\n        property=\"name\"\n        valueProperty=\"name\"\n        noDataMessage={messages.noGroup}\n      >\n        Select the reuse group:\n      </InputContainer>\n      <InputContainer\n        type=\"select\"\n        name=\"reuseFolder\"\n        id=\"upload-file-reuse-folder\"\n        onChange={handleReuseDataChange}\n        options={reuseData.folderList}\n        value={reuseData.reuseFolder}\n        property=\"name\"\n        noDataMessage={messages.noFolder}\n      >\n        Select the reuse folder:\n      </InputContainer>\n      <InputContainer\n        type=\"select\"\n        name=\"reuseUpload\"\n        id=\"upload-file-reuse-upload\"\n        onChange={handleChange}\n        options={reuseData.uploadList}\n        value={parseInt(reuse.reuseUpload, 10)}\n        property=\"uploadname\"\n        valueProperty=\"id\"\n        noDataMessage={messages.noUploads}\n      >\n        Select the reuse upload:\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseEnhanced}\n        name=\"reuseEnhanced\"\n        id=\"upload-file-reuse-enhanced\"\n        onChange={handleChange}\n      >\n        Enhanced reuse (slower)\n        <Tooltip title=\"will copy a clearing decision if the two files differ by one line determined by a diff tool\" />\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseMain}\n        name=\"reuseMain\"\n        id=\"upload-file-reuse-main\"\n        onChange={handleChange}\n      >\n        Reuse main license/s\n        <Tooltip title=\"will copy a main license decision if any\" />\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseReport}\n        name=\"reuseReport\"\n        id=\"upload-file-reuse-report\"\n        onChange={handleChange}\n      >\n        Reuse report configuration settings\n        <Tooltip title=\"use to copy all the information from conf page(if any)\" />\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseCopyright}\n        name=\"reuseCopyright\"\n        id=\"upload-file-reuse-copyright\"\n        onChange={handleChange}\n      >\n        Reuse edited and deactivated copyrights\n        <Tooltip title=\"use to copy edited and deactivated copyrights from the reused package\" />\n      </InputContainer>\n    </div>\n  );\n};\n\nUploadReuse.propTypes = {\n  reuse: PropTypes.shape({\n    reuseUpload: PropTypes.number.isRequired,\n    reuseGroup: PropTypes.string.isRequired,\n    reuseMain: PropTypes.bool.isRequired,\n    reuseEnhanced: PropTypes.bool.isRequired,\n    reuseReport: PropTypes.bool.isRequired,\n    reuseCopyright: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default UploadReuse;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport IgnoreScm from \"./IgnoreScm\";\nimport AccessLevel from \"./AccessLevel\";\nimport OptionalAnalysis from \"./OptionalAnalysis\";\nimport LicenseDecider from \"./LicenseDecider\";\nimport UploadReuse from \"./UploadReuse\";\n\nfunction CommonFields({\n  accessLevel,\n  ignoreScm,\n  analysis,\n  decider,\n  reuse,\n  handleChange,\n  handleScanChange,\n}) {\n  return (\n    <>\n      {ignoreScm && (\n        <IgnoreScm ignoreScm={ignoreScm} handleChange={handleChange} />\n      )}\n      {accessLevel && (\n        <AccessLevel accessLevel={accessLevel} handleChange={handleChange} />\n      )}\n      {analysis && (\n        <OptionalAnalysis analysis={analysis} handleChange={handleScanChange} />\n      )}\n      {decider && (\n        <LicenseDecider decider={decider} handleChange={handleScanChange} />\n      )}\n      {reuse && <UploadReuse reuse={reuse} handleChange={handleScanChange} />}\n    </>\n  );\n}\n\nCommonFields.propTypes = {\n  accessLevel: PropTypes.string,\n  ignoreScm: PropTypes.bool,\n  analysis: PropTypes.shape({\n    bucket: PropTypes.bool.isRequired,\n    copyrightEmailAuthor: PropTypes.bool.isRequired,\n    ecc: PropTypes.bool.isRequired,\n    keyword: PropTypes.bool.isRequired,\n    mime: PropTypes.bool.isRequired,\n    monk: PropTypes.bool.isRequired,\n    nomos: PropTypes.bool.isRequired,\n    ojo: PropTypes.bool.isRequired,\n    package: PropTypes.bool.isRequired,\n  }),\n  decider: PropTypes.shape({\n    nomosMonk: PropTypes.bool.isRequired,\n    bulkReused: PropTypes.bool.isRequired,\n    newScanner: PropTypes.bool.isRequired,\n    ojoDecider: PropTypes.bool.isRequired,\n  }),\n  reuse: PropTypes.shape({\n    reuseUpload: PropTypes.number.isRequired,\n    reuseGroup: PropTypes.string.isRequired,\n    reuseMain: PropTypes.bool.isRequired,\n    reuseEnhanced: PropTypes.bool.isRequired,\n    reuseReport: PropTypes.bool.isRequired,\n    reuseCopyright: PropTypes.bool.isRequired,\n  }),\n  handleChange: PropTypes.func,\n  handleScanChange: PropTypes.func,\n};\n\nexport default CommonFields;\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport {\n  getJobApi,\n  scheduleAnalysisApi,\n  scheduleReportApi,\n  downloadReportApi,\n  getAllJobApi,\n} from \"api/jobs\";\nimport { getReportIdFromUrl } from \"shared/helper\";\nimport { getLocalStorage } from \"shared/storageHelper\";\n\n// Fetching the jobs\nexport const getJob = (jobId) => {\n  return getJobApi(jobId).then((res) => {\n    return res.entity.map((jsonObject) => {\n      const tag = {};\n      tag.stats = { score: jsonObject.score };\n      return tag;\n    });\n  });\n};\n\n// Fetching all jobs\nexport const getAllJob = (jobsDatalist) => {\n  return getAllJobApi(jobsDatalist).then((res) => {\n    return {\n      res,\n      pages: getLocalStorage(\"pages\"),\n    };\n  });\n};\n\n// Scheduling the analysis for the uploads\nexport const scheduleAnalysis = (folderId, uploadId, scanData) => {\n  return scheduleAnalysisApi(folderId, uploadId, scanData).then((res) => {\n    return res;\n  });\n};\n\nexport const scheduleReport = (uploadId, reportFormat) => {\n  return scheduleReportApi(uploadId, reportFormat).then((res) => {\n    return res;\n  });\n};\n\nexport const downloadReport = (url) => {\n  const reportId = getReportIdFromUrl(url);\n  if (reportId === null) {\n    return null;\n  }\n  return downloadReportApi(reportId).then((res) => {\n    return res;\n  });\n};\n\nexport default getJob;\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport endpoints from \"constants/endpoints\";\n\n// Getting Authorization Token\nimport { getToken } from \"shared/authHelper\";\n\n// Function for calling the fetch function for the APIs\nimport sendRequest from \"./sendRequest\";\n\nexport const getAllJobApi = ({ page, limit }) => {\n  const url = endpoints.jobs.scheduleAnalysis();\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n      page,\n      limit,\n    },\n  });\n};\n// Fetching the jobs\nexport const getJobApi = ({ jobId }) => {\n  const url = endpoints.jobs.details(jobId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n  });\n};\n\n// Scheduling the analysis for the uploads\nexport const scheduleAnalysisApi = (folderId, uploadId, scanData) => {\n  const url = endpoints.jobs.scheduleAnalysis();\n  const { bucket, copyrightEmailAuthor, ecc, keyword, mime, monk, nomos, ojo } =\n    scanData?.analysis;\n  const { nomosMonk, bulkReused, newScanner, ojoDecider } = scanData?.decider;\n  const {\n    reuseUpload,\n    reuseGroup,\n    reuseMain,\n    reuseEnhanced,\n    reuseReport,\n    reuseCopyright,\n  } = scanData?.reuse;\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      Authorization: getToken(),\n      folderId,\n      uploadId,\n    },\n    body: {\n      analysis: {\n        bucket,\n        copyright_email_author: copyrightEmailAuthor,\n        ecc,\n        keyword,\n        mime,\n        monk,\n        nomos,\n        ojo,\n        package: scanData.analysis.package,\n      },\n      decider: {\n        nomos_monk: nomosMonk,\n        bulk_reused: bulkReused,\n        new_scanner: newScanner,\n        ojo_decider: ojoDecider,\n      },\n      reuse: {\n        reuse_upload: reuseUpload,\n        reuse_group: reuseGroup,\n        reuse_main: reuseMain,\n        reuse_enhanced: reuseEnhanced,\n        reuse_report: reuseReport,\n        reuse_copyright: reuseCopyright,\n      },\n    },\n  });\n};\n\nexport const scheduleReportApi = (uploadId, reportFormat) => {\n  const url = endpoints.jobs.scheduleReport();\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n      uploadId,\n      reportFormat,\n    },\n  });\n};\n\nexport const downloadReportApi = (reportId) => {\n  const url = endpoints.jobs.downloadReport(reportId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n    isFile: true,\n  });\n};\n\nexport default getJobApi;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport PropTypes from \"prop-types\";\nimport endpoints from \"constants/endpoints\";\n\n// Getting Authorization Token\nimport { getToken } from \"shared/authHelper\";\n\n// Function for calling the fetch function for the APIs\nimport sendRequest from \"./sendRequest\";\n\n// Create Uploads from File\nexport const createUploadApi = (\n  folderId,\n  uploadDescription,\n  accessLevel,\n  ignoreScm,\n  fileInput\n) => {\n  const url = endpoints.upload.uploadCreate();\n  const formdata = new FormData();\n  if (fileInput) {\n    formdata.append(\"fileInput\", fileInput, fileInput?.name);\n  }\n  return sendRequest({\n    url,\n    method: \"POST\",\n    isMultipart: true,\n    headers: {\n      Authorization: getToken(),\n      folderId,\n      uploadDescription,\n      public: accessLevel,\n      ignoreScm,\n      uploadType: \"\",\n    },\n    body: formdata,\n  });\n};\n\n// Create Uploads from Version Control System\nexport const createUploadVcsApi = (header, body) => {\n  const url = endpoints.upload.uploadCreate();\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      ...header,\n      Authorization: getToken(),\n    },\n    body,\n  });\n};\n\n// Create Uploads from URL\nexport const createUploadUrlApi = (header, body) => {\n  const url = endpoints.upload.uploadCreate();\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      ...header,\n      Authorization: getToken(),\n    },\n    body,\n  });\n};\n\n// Getting a Upload by id\nexport const getUploadByIdApi = (uploadId, retries) => {\n  const url = endpoints.upload.getId(uploadId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n    retries,\n    headers: {\n      Authorization: getToken(),\n    },\n  });\n};\n\n// Getting a Upload Summary\nexport const getUploadSummaryApi = (uploadId) => {\n  const url = endpoints.upload.getSummary(uploadId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n  });\n};\n\n// Getting a Upload License\nexport const getUploadLicenseApi = (uploadId, agent) => {\n  const url = endpoints.upload.getLicense(uploadId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n    queryParams: {\n      agent,\n    },\n  });\n};\n\ncreateUploadApi.propTypes = {\n  folderId: PropTypes.number,\n  uploadDescription: PropTypes.string,\n  accessLevel: PropTypes.string,\n  ignoreScm: PropTypes.bool,\n  fileInput: PropTypes.string,\n};\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n SPDX-License-Identifier: GPL-2.0\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport {\n  createUploadApi,\n  getUploadByIdApi,\n  createUploadVcsApi,\n  createUploadUrlApi,\n  getUploadSummaryApi,\n  getUploadLicenseApi,\n} from \"api/upload\";\n\n// Create Uploads from File\nexport const createUploadFile = ({\n  folderId,\n  uploadDescription,\n  accessLevel,\n  ignoreScm,\n  fileInput,\n}) => {\n  return createUploadApi(\n    folderId,\n    uploadDescription,\n    accessLevel,\n    ignoreScm,\n    fileInput\n  ).then((res) => {\n    return res;\n  });\n};\n\n// Create Uploads from Version Control System\nexport const createUploadVcs = (header, body) => {\n  return createUploadVcsApi(header, body).then((res) => {\n    return res;\n  });\n};\n\n// Create Uploads from URL\nexport const createUploadUrl = (header, body) => {\n  return createUploadUrlApi(header, body).then((res) => {\n    return res;\n  });\n};\n\n// Getting a Upload by id\nexport const getUploadById = (uploadId, retries) => {\n  return getUploadByIdApi(uploadId, retries).then((res) => {\n    return res;\n  });\n};\n\n// Getting a Upload Summary\nexport const getUploadSummary = (uploadId) => {\n  return getUploadSummaryApi(uploadId).then((res) => {\n    return res;\n  });\n};\n\n// Getting a Upload License\nexport const getUploadLicense = (uploadId, agent) => {\n  return getUploadLicenseApi(uploadId, agent).then((res) => {\n    return res;\n  });\n};\n"],"sourceRoot":""}