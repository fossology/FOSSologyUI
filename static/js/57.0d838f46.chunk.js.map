{"version":3,"sources":["pages/Organize/Uploads/Move/index.jsx","shared/helper.js"],"names":["UploadMove","useState","folderId","moveCopyUploadData","setMoveCopyUploadData","moveCopyUploadsList","setMoveCopyUploadsList","setFolderId","id","name","description","parent","folderList","setFolderList","uploadList","setUploadList","loading","setLoading","showMessage","setShowMessage","type","text","message","setMessage","handleChange","e","target","multiple","Array","from","selectedOptions","option","value","getUploadList","getUploadsFolderId","parseInt","then","res","catch","error","handleError","useEffect","getAllFolders","title","className","setShow","onChange","options","property","onClick","preventDefault","length","map","moveUpload","messages","scheduleUploadMovement","selectUploadsToMove","as","animation","size","role","copyUpload","scheduledUploadCopy","selectUploadsToCopy","randomString","result","characters","charactersLength","i","charAt","Math","floor","random","getDate","day","Date","prototype","addDays","days","currentDate","this","valueOf","setDate","toISOString","split","getNameInitials","nameList","substring","toUpperCase","n","index","join","window","scrollTo","top","getReportIdFromUrl","url","matches","match","getFileNameFromContentDispostionHeader","header","contentDispostion","fileName","trim"],"mappings":"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","file":"static/js/57.0d838f46.chunk.js","sourcesContent":["/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React, { useState, useEffect } from \"react\";\nimport messages from \"constants/messages\";\n\n// Title\nimport Title from \"components/Title\";\n\n// Widgets\nimport { Alert, Button, InputContainer, Spinner } from \"components/Widgets\";\n\n// Required functions for calling APIs\nimport {\n  moveUpload,\n  copyUpload,\n  getUploadsFolderId,\n} from \"services/organizeUploads\";\nimport { getAllFolders } from \"services/folders\";\n\n// Helper function for error handling\nimport { handleError } from \"shared/helper\";\n\nconst UploadMove = () => {\n  const initialState = {\n    folderId: 1,\n  };\n  const initialFolderList = [\n    {\n      id: 1,\n      name: \"Software Repository\",\n      description: \"Top Folder\",\n      parent: null,\n    },\n  ];\n  const initialMessage = {\n    type: \"success\",\n    text: \"\",\n  };\n\n  const [moveCopyUploadData, setMoveCopyUploadData] = useState(initialState);\n  const [moveCopyUploadsList, setMoveCopyUploadsList] = useState([]);\n\n  // Setting the folderId from which data to be moved initially set to 1\n  const [folderId, setFolderId] = useState(1);\n\n  // Setting the list for all the folders names\n  const [folderList, setFolderList] = useState(initialFolderList);\n\n  // Setting the list for all the uploads of respective folders\n  const [uploadList, setUploadList] = useState([]);\n\n  // State Variables for handling Error Boundaries\n  const [loading, setLoading] = useState(false);\n  const [showMessage, setShowMessage] = useState(false);\n  const [message, setMessage] = useState(initialMessage);\n\n  const handleChange = (e) => {\n    if (e.target.multiple) {\n      return setMoveCopyUploadsList(\n        Array.from(e.target.selectedOptions, (option) => option.value)\n      );\n    }\n    return setMoveCopyUploadData({\n      ...moveCopyUploadData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const getUploadList = () => {\n    getUploadsFolderId(parseInt(folderId, 10))\n      .then((res) => {\n        setUploadList(res);\n      })\n      .catch((error) => {\n        handleError(error, setMessage);\n        setShowMessage(true);\n      });\n  };\n\n  const handleMove = (e) => {\n    e.preventDefault();\n    if (moveCopyUploadsList.length > 0) {\n      moveCopyUploadsList.map((id) => {\n        return moveUpload(moveCopyUploadData.folderId, parseInt(id, 10))\n          .then(() => {\n            setMessage({\n              type: \"success\",\n              text: messages.scheduleUploadMovement,\n            });\n            getUploadList();\n            setShowMessage(true);\n          })\n          .catch((error) => {\n            handleError(error, setMessage);\n            setShowMessage(true);\n          });\n      });\n    } else {\n      setLoading(false);\n      setShowMessage(true);\n      setMessage({\n        type: \"danger\",\n        text: messages.selectUploadsToMove,\n      });\n    }\n  };\n\n  const handleCopy = (e) => {\n    e.preventDefault();\n    if (moveCopyUploadsList.length > 0) {\n      moveCopyUploadsList.map((id) => {\n        return copyUpload(moveCopyUploadData.folderId, id)\n          .then(() => {\n            setMessage({\n              type: \"success\",\n              text: messages.scheduledUploadCopy,\n            });\n            getUploadList();\n            setShowMessage(true);\n          })\n          .catch((error) => {\n            handleError(error, setMessage);\n            setShowMessage(true);\n          });\n      });\n    } else {\n      setLoading(false);\n      setShowMessage(true);\n      setMessage({\n        type: \"danger\",\n        text: messages.selectUploadsToCopy,\n      });\n    }\n  };\n  useEffect(() => {\n    getAllFolders()\n      .then((res) => {\n        setFolderList(res);\n      })\n      .catch((error) => {\n        handleError(error, setMessage);\n        setShowMessage(true);\n      });\n    getUploadList();\n  }, [folderId]);\n  return (\n    <>\n      <Title title=\"Move or Copy Upload\" />\n      <div className=\"main-container my-3\">\n        {showMessage && (\n          <Alert\n            type={message.type}\n            setShow={setShowMessage}\n            message={message.text}\n          />\n        )}\n        <h1 className=\"font-size-main-heading\">Move or Copy Upload</h1>\n        <br />\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-8\">\n            <form>\n              <InputContainer\n                type=\"select\"\n                name=\"folderId\"\n                id=\"organize-upload-folder-id\"\n                onChange={(e) => setFolderId(e.target.value)}\n                options={folderList}\n                property=\"name\"\n              >\n                Select a folder whose uploads you want to move/copy:\n              </InputContainer>\n              <br />\n              <InputContainer\n                type=\"select\"\n                name=\"moveCopyUploadList\"\n                id=\"organize-upload\"\n                onChange={handleChange}\n                options={uploadList}\n                property=\"uploadname\"\n                multiple\n              >\n                Select the folder where the content shall be placed:\n              </InputContainer>\n              <br />\n              <InputContainer\n                type=\"select\"\n                name=\"folderId\"\n                id=\"organize-upload-move-folder\"\n                onChange={handleChange}\n                options={folderList}\n                value={moveCopyUploadData.folderId}\n                property=\"name\"\n              >\n                Select the folder where the content shall be placed:\n              </InputContainer>\n              <Button type=\"submit\" onClick={handleMove} className=\"mt-4\">\n                {loading ? (\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                ) : (\n                  \"Move\"\n                )}\n              </Button>\n              &emsp;\n              <Button type=\"submit\" onClick={handleCopy} className=\"mt-4\">\n                {loading ? (\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                ) : (\n                  \"Copy\"\n                )}\n              </Button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UploadMove;\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\n// Random string generator\nexport const randomString = (length) => {\n  let result = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\n// Get date in YYYY-MM-DD format\nexport const getDate = (day) => {\n  // eslint-disable-next-line no-extend-native, func-names\n  Date.prototype.addDays = function (days) {\n    const currentDate = new Date(this.valueOf());\n    currentDate.setDate(currentDate.getDate() + days);\n    return currentDate;\n  };\n  const date = new Date();\n  return date.addDays(day).toISOString().split(\"T\")[0];\n};\n\n// Returns the initials of given name\nexport const getNameInitials = (name) => {\n  if (!name) {\n    return name;\n  }\n  // Convert name into array of words\n  const nameList = name.split(\" \");\n  // For single word name return first 2 characters\n  if (nameList.length === 1) {\n    return nameList[0].substring(0, 2).toUpperCase();\n  }\n  // Return the first 3 characters of the initials\n  return nameList\n    .map((n, index) => {\n      if (index < 3) {\n        return n[0];\n      }\n      return null;\n    })\n    .join(\"\")\n    .toUpperCase();\n};\n\n// Common handle error component\nexport const handleError = (error, setMessage) => {\n  window.scrollTo({ top: 0 });\n  setMessage({\n    type: \"danger\",\n    text: error.message,\n  });\n};\n\n// Extract report id from url\nexport const getReportIdFromUrl = (url) => {\n  const matches = url.match(/report\\/([0-9]+)/);\n  if (matches != null) {\n    return matches[1];\n  }\n  return null;\n};\n\nexport const getFileNameFromContentDispostionHeader = (header) => {\n  const contentDispostion = header.split(\";\");\n  let fileName = \"download.txt\";\n  // eslint-disable-next-line no-restricted-syntax\n  for (const headerElement of contentDispostion) {\n    const matches = headerElement.trim().match(/filename=\"(.*)\"/);\n    if (matches != null) {\n      fileName = matches[1];\n      break;\n    }\n  }\n\n  return fileName;\n};\n"],"sourceRoot":""}